
REQ4_CarWith.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001798  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000180c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  00800060  00800060  0000180c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000180c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000183c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  00001878  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a1b  00000000  00000000  00001ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009eb  00000000  00000000  000034db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014aa  00000000  00000000  00003ec6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ae8  00000000  00000000  00005370  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d55  00000000  00000000  00005e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017c8  00000000  00000000  00006bad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00008375  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 32 00 	jmp	0x64	; 0x64 <__ctors_end>
       4:	0c 94 c8 01 	jmp	0x390	; 0x390 <__vector_1>
       8:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
       c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      10:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      14:	0c 94 3f 02 	jmp	0x47e	; 0x47e <__vector_5>
      18:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      1c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      20:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      24:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      28:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      2c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      30:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      34:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      38:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      3c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      40:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      44:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      48:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      4c:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      50:	0c 94 44 00 	jmp	0x88	; 0x88 <__bad_interrupt>
      54:	18 08       	sbc	r1, r8
      56:	1d 08       	sbc	r1, r13
      58:	24 08       	sbc	r2, r4
      5a:	2b 08       	sbc	r2, r11
      5c:	32 08       	sbc	r3, r2
      5e:	39 08       	sbc	r3, r9
      60:	40 08       	sbc	r4, r0
      62:	47 08       	sbc	r4, r7

00000064 <__ctors_end>:
      64:	11 24       	eor	r1, r1
      66:	1f be       	out	0x3f, r1	; 63
      68:	cf e5       	ldi	r28, 0x5F	; 95
      6a:	d8 e0       	ldi	r29, 0x08	; 8
      6c:	de bf       	out	0x3e, r29	; 62
      6e:	cd bf       	out	0x3d, r28	; 61

00000070 <__do_clear_bss>:
      70:	20 e0       	ldi	r18, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	01 c0       	rjmp	.+2      	; 0x7a <.do_clear_bss_start>

00000078 <.do_clear_bss_loop>:
      78:	1d 92       	st	X+, r1

0000007a <.do_clear_bss_start>:
      7a:	a3 37       	cpi	r26, 0x73	; 115
      7c:	b2 07       	cpc	r27, r18
      7e:	e1 f7       	brne	.-8      	; 0x78 <.do_clear_bss_loop>
      80:	0e 94 f6 03 	call	0x7ec	; 0x7ec <main>
      84:	0c 94 ca 0b 	jmp	0x1794	; 0x1794 <_exit>

00000088 <__bad_interrupt>:
      88:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000008c <Av_gpioPortDirection>:
		case myPORTD :
		result = PIN_D;
		break;
	}
	return result;
}
      8c:	cf 93       	push	r28
      8e:	df 93       	push	r29
      90:	00 d0       	rcall	.+0      	; 0x92 <Av_gpioPortDirection+0x6>
      92:	cd b7       	in	r28, 0x3d	; 61
      94:	de b7       	in	r29, 0x3e	; 62
      96:	89 83       	std	Y+1, r24	; 0x01
      98:	6a 83       	std	Y+2, r22	; 0x02
      9a:	89 81       	ldd	r24, Y+1	; 0x01
      9c:	88 2f       	mov	r24, r24
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	81 30       	cpi	r24, 0x01	; 1
      a2:	91 05       	cpc	r25, r1
      a4:	91 f0       	breq	.+36     	; 0xca <Av_gpioPortDirection+0x3e>
      a6:	82 30       	cpi	r24, 0x02	; 2
      a8:	91 05       	cpc	r25, r1
      aa:	1c f4       	brge	.+6      	; 0xb2 <Av_gpioPortDirection+0x26>
      ac:	89 2b       	or	r24, r25
      ae:	39 f0       	breq	.+14     	; 0xbe <Av_gpioPortDirection+0x32>
      b0:	1e c0       	rjmp	.+60     	; 0xee <Av_gpioPortDirection+0x62>
      b2:	82 30       	cpi	r24, 0x02	; 2
      b4:	91 05       	cpc	r25, r1
      b6:	79 f0       	breq	.+30     	; 0xd6 <Av_gpioPortDirection+0x4a>
      b8:	03 97       	sbiw	r24, 0x03	; 3
      ba:	99 f0       	breq	.+38     	; 0xe2 <Av_gpioPortDirection+0x56>
      bc:	18 c0       	rjmp	.+48     	; 0xee <Av_gpioPortDirection+0x62>
      be:	8a e3       	ldi	r24, 0x3A	; 58
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	2a 81       	ldd	r18, Y+2	; 0x02
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
      c8:	12 c0       	rjmp	.+36     	; 0xee <Av_gpioPortDirection+0x62>
      ca:	87 e3       	ldi	r24, 0x37	; 55
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	2a 81       	ldd	r18, Y+2	; 0x02
      d0:	fc 01       	movw	r30, r24
      d2:	20 83       	st	Z, r18
      d4:	0c c0       	rjmp	.+24     	; 0xee <Av_gpioPortDirection+0x62>
      d6:	84 e3       	ldi	r24, 0x34	; 52
      d8:	90 e0       	ldi	r25, 0x00	; 0
      da:	2a 81       	ldd	r18, Y+2	; 0x02
      dc:	fc 01       	movw	r30, r24
      de:	20 83       	st	Z, r18
      e0:	06 c0       	rjmp	.+12     	; 0xee <Av_gpioPortDirection+0x62>
      e2:	81 e3       	ldi	r24, 0x31	; 49
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	2a 81       	ldd	r18, Y+2	; 0x02
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
      ec:	00 00       	nop
      ee:	00 00       	nop
      f0:	0f 90       	pop	r0
      f2:	0f 90       	pop	r0
      f4:	df 91       	pop	r29
      f6:	cf 91       	pop	r28
      f8:	08 95       	ret

000000fa <Av_gpioPinDirection>:
 * @param port
 * @param pins
 * @param direction
 */
void Av_gpioPinDirection(uint8 port, uint8 pins, uint8 direction)
{
      fa:	cf 93       	push	r28
      fc:	df 93       	push	r29
      fe:	00 d0       	rcall	.+0      	; 0x100 <Av_gpioPinDirection+0x6>
     100:	1f 92       	push	r1
     102:	cd b7       	in	r28, 0x3d	; 61
     104:	de b7       	in	r29, 0x3e	; 62
     106:	89 83       	std	Y+1, r24	; 0x01
     108:	6a 83       	std	Y+2, r22	; 0x02
     10a:	4b 83       	std	Y+3, r20	; 0x03
	switch(port)
     10c:	89 81       	ldd	r24, Y+1	; 0x01
     10e:	88 2f       	mov	r24, r24
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	81 30       	cpi	r24, 0x01	; 1
     114:	91 05       	cpc	r25, r1
     116:	81 f1       	breq	.+96     	; 0x178 <Av_gpioPinDirection+0x7e>
     118:	82 30       	cpi	r24, 0x02	; 2
     11a:	91 05       	cpc	r25, r1
     11c:	1c f4       	brge	.+6      	; 0x124 <Av_gpioPinDirection+0x2a>
     11e:	89 2b       	or	r24, r25
     120:	49 f0       	breq	.+18     	; 0x134 <Av_gpioPinDirection+0x3a>
				break;
			}
		}
		break;
	}
}
     122:	90 c0       	rjmp	.+288    	; 0x244 <Av_gpioPinDirection+0x14a>
 * @param pins
 * @param direction
 */
void Av_gpioPinDirection(uint8 port, uint8 pins, uint8 direction)
{
	switch(port)
     124:	82 30       	cpi	r24, 0x02	; 2
     126:	91 05       	cpc	r25, r1
     128:	09 f4       	brne	.+2      	; 0x12c <Av_gpioPinDirection+0x32>
     12a:	48 c0       	rjmp	.+144    	; 0x1bc <Av_gpioPinDirection+0xc2>
     12c:	03 97       	sbiw	r24, 0x03	; 3
     12e:	09 f4       	brne	.+2      	; 0x132 <Av_gpioPinDirection+0x38>
     130:	67 c0       	rjmp	.+206    	; 0x200 <Av_gpioPinDirection+0x106>
				break;
			}
		}
		break;
	}
}
     132:	88 c0       	rjmp	.+272    	; 0x244 <Av_gpioPinDirection+0x14a>
{
	switch(port)
	{
		case myPORTA :
		{
		switch(direction)
     134:	8b 81       	ldd	r24, Y+3	; 0x03
     136:	88 2f       	mov	r24, r24
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	00 97       	sbiw	r24, 0x00	; 0
     13c:	21 f0       	breq	.+8      	; 0x146 <Av_gpioPinDirection+0x4c>
     13e:	8f 3f       	cpi	r24, 0xFF	; 255
     140:	91 05       	cpc	r25, r1
     142:	71 f0       	breq	.+28     	; 0x160 <Av_gpioPinDirection+0x66>
		case set_OUT : 
		DDR_A |= (pins);
		break;
		}
		}
		break;
     144:	7f c0       	rjmp	.+254    	; 0x244 <Av_gpioPinDirection+0x14a>
		case myPORTA :
		{
		switch(direction)
		{
		case set_IN : 
		DDR_A &= ~(pins);
     146:	8a e3       	ldi	r24, 0x3A	; 58
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	2a e3       	ldi	r18, 0x3A	; 58
     14c:	30 e0       	ldi	r19, 0x00	; 0
     14e:	f9 01       	movw	r30, r18
     150:	20 81       	ld	r18, Z
     152:	32 2f       	mov	r19, r18
     154:	2a 81       	ldd	r18, Y+2	; 0x02
     156:	20 95       	com	r18
     158:	23 23       	and	r18, r19
     15a:	fc 01       	movw	r30, r24
     15c:	20 83       	st	Z, r18
		break;
     15e:	0b c0       	rjmp	.+22     	; 0x176 <Av_gpioPinDirection+0x7c>
		case set_OUT : 
		DDR_A |= (pins);
     160:	8a e3       	ldi	r24, 0x3A	; 58
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	2a e3       	ldi	r18, 0x3A	; 58
     166:	30 e0       	ldi	r19, 0x00	; 0
     168:	f9 01       	movw	r30, r18
     16a:	30 81       	ld	r19, Z
     16c:	2a 81       	ldd	r18, Y+2	; 0x02
     16e:	23 2b       	or	r18, r19
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18
		break;
     174:	00 00       	nop
		}
		}
		break;
     176:	66 c0       	rjmp	.+204    	; 0x244 <Av_gpioPinDirection+0x14a>
		
		case myPORTB :
		{
		switch(direction)
     178:	8b 81       	ldd	r24, Y+3	; 0x03
     17a:	88 2f       	mov	r24, r24
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	00 97       	sbiw	r24, 0x00	; 0
     180:	21 f0       	breq	.+8      	; 0x18a <Av_gpioPinDirection+0x90>
     182:	8f 3f       	cpi	r24, 0xFF	; 255
     184:	91 05       	cpc	r25, r1
     186:	71 f0       	breq	.+28     	; 0x1a4 <Av_gpioPinDirection+0xaa>
		case set_OUT :
			DDR_B |= (pins);
			break;
		}
		}
		break;
     188:	5d c0       	rjmp	.+186    	; 0x244 <Av_gpioPinDirection+0x14a>
		case myPORTB :
		{
		switch(direction)
		{
		case set_IN :
			DDR_B &= ~(pins);
     18a:	87 e3       	ldi	r24, 0x37	; 55
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	27 e3       	ldi	r18, 0x37	; 55
     190:	30 e0       	ldi	r19, 0x00	; 0
     192:	f9 01       	movw	r30, r18
     194:	20 81       	ld	r18, Z
     196:	32 2f       	mov	r19, r18
     198:	2a 81       	ldd	r18, Y+2	; 0x02
     19a:	20 95       	com	r18
     19c:	23 23       	and	r18, r19
     19e:	fc 01       	movw	r30, r24
     1a0:	20 83       	st	Z, r18
			break;
     1a2:	0b c0       	rjmp	.+22     	; 0x1ba <Av_gpioPinDirection+0xc0>
		case set_OUT :
			DDR_B |= (pins);
     1a4:	87 e3       	ldi	r24, 0x37	; 55
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	27 e3       	ldi	r18, 0x37	; 55
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	f9 01       	movw	r30, r18
     1ae:	30 81       	ld	r19, Z
     1b0:	2a 81       	ldd	r18, Y+2	; 0x02
     1b2:	23 2b       	or	r18, r19
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18
			break;
     1b8:	00 00       	nop
		}
		}
		break;
     1ba:	44 c0       	rjmp	.+136    	; 0x244 <Av_gpioPinDirection+0x14a>
		case myPORTC :
		{
			switch(direction)
     1bc:	8b 81       	ldd	r24, Y+3	; 0x03
     1be:	88 2f       	mov	r24, r24
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	00 97       	sbiw	r24, 0x00	; 0
     1c4:	21 f0       	breq	.+8      	; 0x1ce <Av_gpioPinDirection+0xd4>
     1c6:	8f 3f       	cpi	r24, 0xFF	; 255
     1c8:	91 05       	cpc	r25, r1
     1ca:	71 f0       	breq	.+28     	; 0x1e8 <Av_gpioPinDirection+0xee>
				case set_OUT :
				DDR_C |= (pins);
				break;
			}
		}
		break;
     1cc:	3b c0       	rjmp	.+118    	; 0x244 <Av_gpioPinDirection+0x14a>
		case myPORTC :
		{
			switch(direction)
			{
				case set_IN :
				DDR_C &= ~(pins);
     1ce:	84 e3       	ldi	r24, 0x34	; 52
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	24 e3       	ldi	r18, 0x34	; 52
     1d4:	30 e0       	ldi	r19, 0x00	; 0
     1d6:	f9 01       	movw	r30, r18
     1d8:	20 81       	ld	r18, Z
     1da:	32 2f       	mov	r19, r18
     1dc:	2a 81       	ldd	r18, Y+2	; 0x02
     1de:	20 95       	com	r18
     1e0:	23 23       	and	r18, r19
     1e2:	fc 01       	movw	r30, r24
     1e4:	20 83       	st	Z, r18
				break;
     1e6:	0b c0       	rjmp	.+22     	; 0x1fe <Av_gpioPinDirection+0x104>
				case set_OUT :
				DDR_C |= (pins);
     1e8:	84 e3       	ldi	r24, 0x34	; 52
     1ea:	90 e0       	ldi	r25, 0x00	; 0
     1ec:	24 e3       	ldi	r18, 0x34	; 52
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	f9 01       	movw	r30, r18
     1f2:	30 81       	ld	r19, Z
     1f4:	2a 81       	ldd	r18, Y+2	; 0x02
     1f6:	23 2b       	or	r18, r19
     1f8:	fc 01       	movw	r30, r24
     1fa:	20 83       	st	Z, r18
				break;
     1fc:	00 00       	nop
			}
		}
		break;
     1fe:	22 c0       	rjmp	.+68     	; 0x244 <Av_gpioPinDirection+0x14a>
		case myPORTD :
		{
			switch(direction)
     200:	8b 81       	ldd	r24, Y+3	; 0x03
     202:	88 2f       	mov	r24, r24
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	00 97       	sbiw	r24, 0x00	; 0
     208:	21 f0       	breq	.+8      	; 0x212 <Av_gpioPinDirection+0x118>
     20a:	8f 3f       	cpi	r24, 0xFF	; 255
     20c:	91 05       	cpc	r25, r1
     20e:	71 f0       	breq	.+28     	; 0x22c <Av_gpioPinDirection+0x132>
				case set_OUT :
				DDR_D |= (pins);
				break;
			}
		}
		break;
     210:	18 c0       	rjmp	.+48     	; 0x242 <Av_gpioPinDirection+0x148>
		case myPORTD :
		{
			switch(direction)
			{
				case set_IN :
				DDR_D &= ~(pins);
     212:	81 e3       	ldi	r24, 0x31	; 49
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	21 e3       	ldi	r18, 0x31	; 49
     218:	30 e0       	ldi	r19, 0x00	; 0
     21a:	f9 01       	movw	r30, r18
     21c:	20 81       	ld	r18, Z
     21e:	32 2f       	mov	r19, r18
     220:	2a 81       	ldd	r18, Y+2	; 0x02
     222:	20 95       	com	r18
     224:	23 23       	and	r18, r19
     226:	fc 01       	movw	r30, r24
     228:	20 83       	st	Z, r18
				break;
     22a:	0b c0       	rjmp	.+22     	; 0x242 <Av_gpioPinDirection+0x148>
				case set_OUT :
				DDR_D |= (pins);
     22c:	81 e3       	ldi	r24, 0x31	; 49
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	21 e3       	ldi	r18, 0x31	; 49
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	f9 01       	movw	r30, r18
     236:	30 81       	ld	r19, Z
     238:	2a 81       	ldd	r18, Y+2	; 0x02
     23a:	23 2b       	or	r18, r19
     23c:	fc 01       	movw	r30, r24
     23e:	20 83       	st	Z, r18
				break;
     240:	00 00       	nop
			}
		}
		break;
     242:	00 00       	nop
	}
}
     244:	00 00       	nop
     246:	0f 90       	pop	r0
     248:	0f 90       	pop	r0
     24a:	0f 90       	pop	r0
     24c:	df 91       	pop	r29
     24e:	cf 91       	pop	r28
     250:	08 95       	ret

00000252 <Av_gpioPinWrite>:
 * @param port
 * @param pins
 * @param value
 */
void Av_gpioPinWrite(uint8 port, uint8 pins, uint8 value)
{
     252:	cf 93       	push	r28
     254:	df 93       	push	r29
     256:	00 d0       	rcall	.+0      	; 0x258 <Av_gpioPinWrite+0x6>
     258:	1f 92       	push	r1
     25a:	cd b7       	in	r28, 0x3d	; 61
     25c:	de b7       	in	r29, 0x3e	; 62
     25e:	89 83       	std	Y+1, r24	; 0x01
     260:	6a 83       	std	Y+2, r22	; 0x02
     262:	4b 83       	std	Y+3, r20	; 0x03
	switch(value)
     264:	8b 81       	ldd	r24, Y+3	; 0x03
     266:	88 2f       	mov	r24, r24
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	00 97       	sbiw	r24, 0x00	; 0
     26c:	09 f4       	brne	.+2      	; 0x270 <Av_gpioPinWrite+0x1e>
     26e:	42 c0       	rjmp	.+132    	; 0x2f4 <Av_gpioPinWrite+0xa2>
     270:	01 97       	sbiw	r24, 0x01	; 1
     272:	09 f0       	breq	.+2      	; 0x276 <Av_gpioPinWrite+0x24>
			PORT_D &= ~(pins);
			break;
		}
		break;	
	}
}
     274:	86 c0       	rjmp	.+268    	; 0x382 <Av_gpioPinWrite+0x130>
void Av_gpioPinWrite(uint8 port, uint8 pins, uint8 value)
{
	switch(value)
	{
		case TRUE:
			switch(port)
     276:	89 81       	ldd	r24, Y+1	; 0x01
     278:	88 2f       	mov	r24, r24
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	81 30       	cpi	r24, 0x01	; 1
     27e:	91 05       	cpc	r25, r1
     280:	b9 f0       	breq	.+46     	; 0x2b0 <Av_gpioPinWrite+0x5e>
     282:	82 30       	cpi	r24, 0x02	; 2
     284:	91 05       	cpc	r25, r1
     286:	1c f4       	brge	.+6      	; 0x28e <Av_gpioPinWrite+0x3c>
     288:	89 2b       	or	r24, r25
     28a:	39 f0       	breq	.+14     	; 0x29a <Av_gpioPinWrite+0x48>
						break;
					case myPORTD :
						PORT_D |= (pins);
						break;
		}
		break;
     28c:	7a c0       	rjmp	.+244    	; 0x382 <Av_gpioPinWrite+0x130>
void Av_gpioPinWrite(uint8 port, uint8 pins, uint8 value)
{
	switch(value)
	{
		case TRUE:
			switch(port)
     28e:	82 30       	cpi	r24, 0x02	; 2
     290:	91 05       	cpc	r25, r1
     292:	c9 f0       	breq	.+50     	; 0x2c6 <Av_gpioPinWrite+0x74>
     294:	03 97       	sbiw	r24, 0x03	; 3
     296:	11 f1       	breq	.+68     	; 0x2dc <Av_gpioPinWrite+0x8a>
						break;
					case myPORTD :
						PORT_D |= (pins);
						break;
		}
		break;
     298:	74 c0       	rjmp	.+232    	; 0x382 <Av_gpioPinWrite+0x130>
	{
		case TRUE:
			switch(port)
			{
					case myPORTA :
						PORT_A |= (pins);
     29a:	8b e3       	ldi	r24, 0x3B	; 59
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	2b e3       	ldi	r18, 0x3B	; 59
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	f9 01       	movw	r30, r18
     2a4:	30 81       	ld	r19, Z
     2a6:	2a 81       	ldd	r18, Y+2	; 0x02
     2a8:	23 2b       	or	r18, r19
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 83       	st	Z, r18
						break;
     2ae:	21 c0       	rjmp	.+66     	; 0x2f2 <Av_gpioPinWrite+0xa0>
					case myPORTB :
						PORT_B |= (pins);
     2b0:	88 e3       	ldi	r24, 0x38	; 56
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	28 e3       	ldi	r18, 0x38	; 56
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	f9 01       	movw	r30, r18
     2ba:	30 81       	ld	r19, Z
     2bc:	2a 81       	ldd	r18, Y+2	; 0x02
     2be:	23 2b       	or	r18, r19
     2c0:	fc 01       	movw	r30, r24
     2c2:	20 83       	st	Z, r18
						break;
     2c4:	16 c0       	rjmp	.+44     	; 0x2f2 <Av_gpioPinWrite+0xa0>
					case myPORTC :
						PORT_C |= (pins);
     2c6:	85 e3       	ldi	r24, 0x35	; 53
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	25 e3       	ldi	r18, 0x35	; 53
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	f9 01       	movw	r30, r18
     2d0:	30 81       	ld	r19, Z
     2d2:	2a 81       	ldd	r18, Y+2	; 0x02
     2d4:	23 2b       	or	r18, r19
     2d6:	fc 01       	movw	r30, r24
     2d8:	20 83       	st	Z, r18
						break;
     2da:	0b c0       	rjmp	.+22     	; 0x2f2 <Av_gpioPinWrite+0xa0>
					case myPORTD :
						PORT_D |= (pins);
     2dc:	82 e3       	ldi	r24, 0x32	; 50
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	22 e3       	ldi	r18, 0x32	; 50
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	f9 01       	movw	r30, r18
     2e6:	30 81       	ld	r19, Z
     2e8:	2a 81       	ldd	r18, Y+2	; 0x02
     2ea:	23 2b       	or	r18, r19
     2ec:	fc 01       	movw	r30, r24
     2ee:	20 83       	st	Z, r18
						break;
     2f0:	00 00       	nop
		}
		break;
     2f2:	47 c0       	rjmp	.+142    	; 0x382 <Av_gpioPinWrite+0x130>
		
		case FALSE : 
		switch(port)
     2f4:	89 81       	ldd	r24, Y+1	; 0x01
     2f6:	88 2f       	mov	r24, r24
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	81 30       	cpi	r24, 0x01	; 1
     2fc:	91 05       	cpc	r25, r1
     2fe:	c9 f0       	breq	.+50     	; 0x332 <Av_gpioPinWrite+0xe0>
     300:	82 30       	cpi	r24, 0x02	; 2
     302:	91 05       	cpc	r25, r1
     304:	1c f4       	brge	.+6      	; 0x30c <Av_gpioPinWrite+0xba>
     306:	89 2b       	or	r24, r25
     308:	39 f0       	breq	.+14     	; 0x318 <Av_gpioPinWrite+0xc6>
			break;
			case myPORTD :
			PORT_D &= ~(pins);
			break;
		}
		break;	
     30a:	3a c0       	rjmp	.+116    	; 0x380 <Av_gpioPinWrite+0x12e>
						break;
		}
		break;
		
		case FALSE : 
		switch(port)
     30c:	82 30       	cpi	r24, 0x02	; 2
     30e:	91 05       	cpc	r25, r1
     310:	e9 f0       	breq	.+58     	; 0x34c <Av_gpioPinWrite+0xfa>
     312:	03 97       	sbiw	r24, 0x03	; 3
     314:	41 f1       	breq	.+80     	; 0x366 <Av_gpioPinWrite+0x114>
			break;
			case myPORTD :
			PORT_D &= ~(pins);
			break;
		}
		break;	
     316:	34 c0       	rjmp	.+104    	; 0x380 <Av_gpioPinWrite+0x12e>
		
		case FALSE : 
		switch(port)
		{
			case myPORTA :
			PORT_A &= ~(pins);
     318:	8b e3       	ldi	r24, 0x3B	; 59
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	2b e3       	ldi	r18, 0x3B	; 59
     31e:	30 e0       	ldi	r19, 0x00	; 0
     320:	f9 01       	movw	r30, r18
     322:	20 81       	ld	r18, Z
     324:	32 2f       	mov	r19, r18
     326:	2a 81       	ldd	r18, Y+2	; 0x02
     328:	20 95       	com	r18
     32a:	23 23       	and	r18, r19
     32c:	fc 01       	movw	r30, r24
     32e:	20 83       	st	Z, r18
			break;
     330:	27 c0       	rjmp	.+78     	; 0x380 <Av_gpioPinWrite+0x12e>
			case myPORTB :
			PORT_B &= ~(pins);
     332:	88 e3       	ldi	r24, 0x38	; 56
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	28 e3       	ldi	r18, 0x38	; 56
     338:	30 e0       	ldi	r19, 0x00	; 0
     33a:	f9 01       	movw	r30, r18
     33c:	20 81       	ld	r18, Z
     33e:	32 2f       	mov	r19, r18
     340:	2a 81       	ldd	r18, Y+2	; 0x02
     342:	20 95       	com	r18
     344:	23 23       	and	r18, r19
     346:	fc 01       	movw	r30, r24
     348:	20 83       	st	Z, r18
			break;
     34a:	1a c0       	rjmp	.+52     	; 0x380 <Av_gpioPinWrite+0x12e>
			case myPORTC :
			PORT_C &= ~(pins);
     34c:	85 e3       	ldi	r24, 0x35	; 53
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	25 e3       	ldi	r18, 0x35	; 53
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	f9 01       	movw	r30, r18
     356:	20 81       	ld	r18, Z
     358:	32 2f       	mov	r19, r18
     35a:	2a 81       	ldd	r18, Y+2	; 0x02
     35c:	20 95       	com	r18
     35e:	23 23       	and	r18, r19
     360:	fc 01       	movw	r30, r24
     362:	20 83       	st	Z, r18
			break;
     364:	0d c0       	rjmp	.+26     	; 0x380 <Av_gpioPinWrite+0x12e>
			case myPORTD :
			PORT_D &= ~(pins);
     366:	82 e3       	ldi	r24, 0x32	; 50
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	22 e3       	ldi	r18, 0x32	; 50
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	f9 01       	movw	r30, r18
     370:	20 81       	ld	r18, Z
     372:	32 2f       	mov	r19, r18
     374:	2a 81       	ldd	r18, Y+2	; 0x02
     376:	20 95       	com	r18
     378:	23 23       	and	r18, r19
     37a:	fc 01       	movw	r30, r24
     37c:	20 83       	st	Z, r18
			break;
     37e:	00 00       	nop
		}
		break;	
     380:	00 00       	nop
	}
}
     382:	00 00       	nop
     384:	0f 90       	pop	r0
     386:	0f 90       	pop	r0
     388:	0f 90       	pop	r0
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	08 95       	ret

00000390 <__vector_1>:
volatile uint8 flag = 0,numOfOverflows = 0;
volatile uint64 raising_time_ns = 0;


t_ISR(INT0_vect)
{
     390:	1f 92       	push	r1
     392:	0f 92       	push	r0
     394:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     398:	0f 92       	push	r0
     39a:	11 24       	eor	r1, r1
     39c:	2f 93       	push	r18
     39e:	3f 93       	push	r19
     3a0:	4f 93       	push	r20
     3a2:	5f 93       	push	r21
     3a4:	6f 93       	push	r22
     3a6:	7f 93       	push	r23
     3a8:	8f 93       	push	r24
     3aa:	9f 93       	push	r25
     3ac:	af 93       	push	r26
     3ae:	bf 93       	push	r27
     3b0:	ef 93       	push	r30
     3b2:	ff 93       	push	r31
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	cd b7       	in	r28, 0x3d	; 61
     3ba:	de b7       	in	r29, 0x3e	; 62
	if(flag == 0)
     3bc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
     3c0:	88 23       	and	r24, r24
     3c2:	61 f4       	brne	.+24     	; 0x3dc <__vector_1+0x4c>
	{
		TCNT2 = 0;
     3c4:	84 e4       	ldi	r24, 0x44	; 68
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	fc 01       	movw	r30, r24
     3ca:	10 82       	st	Z, r1
		Av_timer2Start();
     3cc:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <Av_timer2Start>
		numOfOverflows = 0;
     3d0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <numOfOverflows>
		flag = 1;
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
		Av_timer1Stop();
		numOfOverflows = 0;
		TCNT2 = 0;
		flag = 0;
	}
}
     3da:	3c c0       	rjmp	.+120    	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
		TCNT2 = 0;
		Av_timer2Start();
		numOfOverflows = 0;
		flag = 1;
	}
	else if(flag == 1)
     3dc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
     3e0:	81 30       	cpi	r24, 0x01	; 1
     3e2:	c1 f5       	brne	.+112    	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	{
		raising_time_ns =  ( ( (numOfOverflows * 256) + TCNT2 ) * ( 1000000000/F_CPU ) );
     3e4:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <numOfOverflows>
     3e8:	88 2f       	mov	r24, r24
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	38 2f       	mov	r19, r24
     3ee:	22 27       	eor	r18, r18
     3f0:	84 e4       	ldi	r24, 0x44	; 68
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	fc 01       	movw	r30, r24
     3f6:	80 81       	ld	r24, Z
     3f8:	88 2f       	mov	r24, r24
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	82 0f       	add	r24, r18
     3fe:	93 1f       	adc	r25, r19
     400:	9c 01       	movw	r18, r24
     402:	99 0f       	add	r25, r25
     404:	44 0b       	sbc	r20, r20
     406:	55 0b       	sbc	r21, r21
     408:	8d e7       	ldi	r24, 0x7D	; 125
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	dc 01       	movw	r26, r24
     40e:	0e 94 3f 0b 	call	0x167e	; 0x167e <__muluhisi3>
     412:	dc 01       	movw	r26, r24
     414:	cb 01       	movw	r24, r22
     416:	9c 01       	movw	r18, r24
     418:	ad 01       	movw	r20, r26
     41a:	60 e0       	ldi	r22, 0x00	; 0
     41c:	70 e0       	ldi	r23, 0x00	; 0
     41e:	cb 01       	movw	r24, r22
     420:	20 93 62 00 	sts	0x0062, r18	; 0x800062 <raising_time_ns>
     424:	30 93 63 00 	sts	0x0063, r19	; 0x800063 <raising_time_ns+0x1>
     428:	40 93 64 00 	sts	0x0064, r20	; 0x800064 <raising_time_ns+0x2>
     42c:	50 93 65 00 	sts	0x0065, r21	; 0x800065 <raising_time_ns+0x3>
     430:	60 93 66 00 	sts	0x0066, r22	; 0x800066 <raising_time_ns+0x4>
     434:	70 93 67 00 	sts	0x0067, r23	; 0x800067 <raising_time_ns+0x5>
     438:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <raising_time_ns+0x6>
     43c:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <raising_time_ns+0x7>
		Av_timer1Stop();
     440:	0e 94 c0 07 	call	0xf80	; 0xf80 <Av_timer1Stop>
		numOfOverflows = 0;
     444:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <numOfOverflows>
		TCNT2 = 0;
     448:	84 e4       	ldi	r24, 0x44	; 68
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	fc 01       	movw	r30, r24
     44e:	10 82       	st	Z, r1
		flag = 0;
     450:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
	}
}
     454:	00 00       	nop
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	ff 91       	pop	r31
     45c:	ef 91       	pop	r30
     45e:	bf 91       	pop	r27
     460:	af 91       	pop	r26
     462:	9f 91       	pop	r25
     464:	8f 91       	pop	r24
     466:	7f 91       	pop	r23
     468:	6f 91       	pop	r22
     46a:	5f 91       	pop	r21
     46c:	4f 91       	pop	r20
     46e:	3f 91       	pop	r19
     470:	2f 91       	pop	r18
     472:	0f 90       	pop	r0
     474:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     478:	0f 90       	pop	r0
     47a:	1f 90       	pop	r1
     47c:	18 95       	reti

0000047e <__vector_5>:

t_ISR(TIMER2_OVF_vect)
{
     47e:	1f 92       	push	r1
     480:	0f 92       	push	r0
     482:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     486:	0f 92       	push	r0
     488:	11 24       	eor	r1, r1
     48a:	8f 93       	push	r24
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	cd b7       	in	r28, 0x3d	; 61
     492:	de b7       	in	r29, 0x3e	; 62
	numOfOverflows++;
     494:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <numOfOverflows>
     498:	8f 5f       	subi	r24, 0xFF	; 255
     49a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <numOfOverflows>
}
     49e:	00 00       	nop
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	8f 91       	pop	r24
     4a6:	0f 90       	pop	r0
     4a8:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     4ac:	0f 90       	pop	r0
     4ae:	1f 90       	pop	r1
     4b0:	18 95       	reti

000004b2 <Av_UltraSonicDistanc>:

uint32 Av_UltraSonicDistanc()
{
     4b2:	af 92       	push	r10
     4b4:	bf 92       	push	r11
     4b6:	cf 92       	push	r12
     4b8:	df 92       	push	r13
     4ba:	ef 92       	push	r14
     4bc:	ff 92       	push	r15
     4be:	0f 93       	push	r16
     4c0:	1f 93       	push	r17
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	00 d0       	rcall	.+0      	; 0x4c8 <Av_UltraSonicDistanc+0x16>
     4c8:	00 d0       	rcall	.+0      	; 0x4ca <Av_UltraSonicDistanc+0x18>
     4ca:	cd b7       	in	r28, 0x3d	; 61
     4cc:	de b7       	in	r29, 0x3e	; 62
	uint32 theDistance;
	theDistance = ( (raising_time_ns/1000000000.0) * (34300/2) );
     4ce:	a0 90 62 00 	lds	r10, 0x0062	; 0x800062 <raising_time_ns>
     4d2:	b0 90 63 00 	lds	r11, 0x0063	; 0x800063 <raising_time_ns+0x1>
     4d6:	c0 90 64 00 	lds	r12, 0x0064	; 0x800064 <raising_time_ns+0x2>
     4da:	d0 90 65 00 	lds	r13, 0x0065	; 0x800065 <raising_time_ns+0x3>
     4de:	e0 90 66 00 	lds	r14, 0x0066	; 0x800066 <raising_time_ns+0x4>
     4e2:	f0 90 67 00 	lds	r15, 0x0067	; 0x800067 <raising_time_ns+0x5>
     4e6:	00 91 68 00 	lds	r16, 0x0068	; 0x800068 <raising_time_ns+0x6>
     4ea:	10 91 69 00 	lds	r17, 0x0069	; 0x800069 <raising_time_ns+0x7>
     4ee:	2a 2d       	mov	r18, r10
     4f0:	3b 2d       	mov	r19, r11
     4f2:	4c 2d       	mov	r20, r12
     4f4:	5d 2d       	mov	r21, r13
     4f6:	6e 2d       	mov	r22, r14
     4f8:	7f 2d       	mov	r23, r15
     4fa:	80 2f       	mov	r24, r16
     4fc:	91 2f       	mov	r25, r17
     4fe:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <__floatundisf>
     502:	dc 01       	movw	r26, r24
     504:	cb 01       	movw	r24, r22
     506:	28 e2       	ldi	r18, 0x28	; 40
     508:	3b e6       	ldi	r19, 0x6B	; 107
     50a:	4e e6       	ldi	r20, 0x6E	; 110
     50c:	5e e4       	ldi	r21, 0x4E	; 78
     50e:	bc 01       	movw	r22, r24
     510:	cd 01       	movw	r24, r26
     512:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__divsf3>
     516:	dc 01       	movw	r26, r24
     518:	cb 01       	movw	r24, r22
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	3c ef       	ldi	r19, 0xFC	; 252
     51e:	45 e8       	ldi	r20, 0x85	; 133
     520:	56 e4       	ldi	r21, 0x46	; 70
     522:	bc 01       	movw	r22, r24
     524:	cd 01       	movw	r24, r26
     526:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     52a:	dc 01       	movw	r26, r24
     52c:	cb 01       	movw	r24, r22
     52e:	bc 01       	movw	r22, r24
     530:	cd 01       	movw	r24, r26
     532:	0e 94 89 09 	call	0x1312	; 0x1312 <__fixunssfsi>
     536:	dc 01       	movw	r26, r24
     538:	cb 01       	movw	r24, r22
     53a:	89 83       	std	Y+1, r24	; 0x01
     53c:	9a 83       	std	Y+2, r25	; 0x02
     53e:	ab 83       	std	Y+3, r26	; 0x03
     540:	bc 83       	std	Y+4, r27	; 0x04
	return theDistance;
     542:	89 81       	ldd	r24, Y+1	; 0x01
     544:	9a 81       	ldd	r25, Y+2	; 0x02
     546:	ab 81       	ldd	r26, Y+3	; 0x03
     548:	bc 81       	ldd	r27, Y+4	; 0x04
}
     54a:	bc 01       	movw	r22, r24
     54c:	cd 01       	movw	r24, r26
     54e:	0f 90       	pop	r0
     550:	0f 90       	pop	r0
     552:	0f 90       	pop	r0
     554:	0f 90       	pop	r0
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	1f 91       	pop	r17
     55c:	0f 91       	pop	r16
     55e:	ff 90       	pop	r15
     560:	ef 90       	pop	r14
     562:	df 90       	pop	r13
     564:	cf 90       	pop	r12
     566:	bf 90       	pop	r11
     568:	af 90       	pop	r10
     56a:	08 95       	ret

0000056c <Av_ICU_Init>:

void Av_ICU_Init()
{
     56c:	ef 92       	push	r14
     56e:	0f 93       	push	r16
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	cd b7       	in	r28, 0x3d	; 61
     576:	de b7       	in	r29, 0x3e	; 62
	INT0_Init_anyChange();
     578:	8b e5       	ldi	r24, 0x5B	; 91
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	2b e5       	ldi	r18, 0x5B	; 91
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	f9 01       	movw	r30, r18
     582:	20 81       	ld	r18, Z
     584:	20 64       	ori	r18, 0x40	; 64
     586:	fc 01       	movw	r30, r24
     588:	20 83       	st	Z, r18
     58a:	85 e5       	ldi	r24, 0x55	; 85
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	25 e5       	ldi	r18, 0x55	; 85
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	f9 01       	movw	r30, r18
     594:	20 81       	ld	r18, Z
     596:	21 60       	ori	r18, 0x01	; 1
     598:	fc 01       	movw	r30, r24
     59a:	20 83       	st	Z, r18
     59c:	85 e5       	ldi	r24, 0x55	; 85
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	25 e5       	ldi	r18, 0x55	; 85
     5a2:	30 e0       	ldi	r19, 0x00	; 0
     5a4:	f9 01       	movw	r30, r18
     5a6:	20 81       	ld	r18, Z
     5a8:	2d 7f       	andi	r18, 0xFD	; 253
     5aa:	fc 01       	movw	r30, r24
     5ac:	20 83       	st	Z, r18
	Av_timer2Init(T2_NORMAL_MODE,T2_OC0_DIS,T2_PRESCALER_1,0,0,T2_INTERRUPT_NORMAL);
     5ae:	68 94       	set
     5b0:	ee 24       	eor	r14, r14
     5b2:	e6 f8       	bld	r14, 6
     5b4:	00 e0       	ldi	r16, 0x00	; 0
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	41 e0       	ldi	r20, 0x01	; 1
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <Av_timer2Init>
	interrupts_On();
     5c2:	8f e5       	ldi	r24, 0x5F	; 95
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	2f e5       	ldi	r18, 0x5F	; 95
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	f9 01       	movw	r30, r18
     5cc:	20 81       	ld	r18, Z
     5ce:	20 68       	ori	r18, 0x80	; 128
     5d0:	fc 01       	movw	r30, r24
     5d2:	20 83       	st	Z, r18
}
     5d4:	00 00       	nop
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	0f 91       	pop	r16
     5dc:	ef 90       	pop	r14
     5de:	08 95       	ret

000005e0 <Av_UltraSonicTrigger>:

void Av_UltraSonicTrigger()
{
     5e0:	cf 93       	push	r28
     5e2:	df 93       	push	r29
     5e4:	cd b7       	in	r28, 0x3d	; 61
     5e6:	de b7       	in	r29, 0x3e	; 62
	Av_gpioPinWrite(myPORTA,BIT0,HIGH);
     5e8:	41 e0       	ldi	r20, 0x01	; 1
     5ea:	61 e0       	ldi	r22, 0x01	; 1
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
	Av_timer0Delay_ns(15000);
     5f2:	68 e9       	ldi	r22, 0x98	; 152
     5f4:	7a e3       	ldi	r23, 0x3A	; 58
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 09 06 	call	0xc12	; 0xc12 <Av_timer0Delay_ns>
	Av_gpioPinWrite(myPORTA,BIT0,LOW);
     5fe:	40 e0       	ldi	r20, 0x00	; 0
     600:	61 e0       	ldi	r22, 0x01	; 1
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
	
     608:	00 00       	nop
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	08 95       	ret

00000610 <led_Init>:
/**
 * Description: Initilizing Function to the Led
 * @param led_Num the number of the Led [LED0,LED1,LED2,LED3]
 */
void led_Init(led led_Num)
{
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	1f 92       	push	r1
     616:	cd b7       	in	r28, 0x3d	; 61
     618:	de b7       	in	r29, 0x3e	; 62
     61a:	89 83       	std	Y+1, r24	; 0x01
	switch(led_Num)
     61c:	89 81       	ldd	r24, Y+1	; 0x01
     61e:	88 2f       	mov	r24, r24
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	80 32       	cpi	r24, 0x20	; 32
     624:	91 05       	cpc	r25, r1
     626:	c1 f0       	breq	.+48     	; 0x658 <led_Init+0x48>
     628:	81 32       	cpi	r24, 0x21	; 33
     62a:	91 05       	cpc	r25, r1
     62c:	1c f4       	brge	.+6      	; 0x634 <led_Init+0x24>
     62e:	40 97       	sbiw	r24, 0x10	; 16
     630:	41 f0       	breq	.+16     	; 0x642 <led_Init+0x32>
		case LED3 :
		Av_gpioPinDirection(LED_PORT,LED3,set_OUT);
		Av_gpioPinWrite(LED_PORT,LED3,FALSE);
		break;
		default:
		break;
     632:	33 c0       	rjmp	.+102    	; 0x69a <led_Init+0x8a>
 * Description: Initilizing Function to the Led
 * @param led_Num the number of the Led [LED0,LED1,LED2,LED3]
 */
void led_Init(led led_Num)
{
	switch(led_Num)
     634:	80 34       	cpi	r24, 0x40	; 64
     636:	91 05       	cpc	r25, r1
     638:	d1 f0       	breq	.+52     	; 0x66e <led_Init+0x5e>
     63a:	80 38       	cpi	r24, 0x80	; 128
     63c:	91 05       	cpc	r25, r1
     63e:	11 f1       	breq	.+68     	; 0x684 <led_Init+0x74>
		case LED3 :
		Av_gpioPinDirection(LED_PORT,LED3,set_OUT);
		Av_gpioPinWrite(LED_PORT,LED3,FALSE);
		break;
		default:
		break;
     640:	2c c0       	rjmp	.+88     	; 0x69a <led_Init+0x8a>
void led_Init(led led_Num)
{
	switch(led_Num)
	{
		case LED0 :
		Av_gpioPinDirection(LED_PORT,LED0,set_OUT);
     642:	4f ef       	ldi	r20, 0xFF	; 255
     644:	60 e1       	ldi	r22, 0x10	; 16
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	0e 94 7d 00 	call	0xfa	; 0xfa <Av_gpioPinDirection>
		Av_gpioPinWrite(LED_PORT,LED0,FALSE);
     64c:	40 e0       	ldi	r20, 0x00	; 0
     64e:	60 e1       	ldi	r22, 0x10	; 16
     650:	81 e0       	ldi	r24, 0x01	; 1
     652:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     656:	21 c0       	rjmp	.+66     	; 0x69a <led_Init+0x8a>
		case LED1 :
		Av_gpioPinDirection(LED_PORT,LED1,set_OUT);
     658:	4f ef       	ldi	r20, 0xFF	; 255
     65a:	60 e2       	ldi	r22, 0x20	; 32
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	0e 94 7d 00 	call	0xfa	; 0xfa <Av_gpioPinDirection>
		Av_gpioPinWrite(LED_PORT,LED1,FALSE);
     662:	40 e0       	ldi	r20, 0x00	; 0
     664:	60 e2       	ldi	r22, 0x20	; 32
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     66c:	16 c0       	rjmp	.+44     	; 0x69a <led_Init+0x8a>
		case LED2 :
		Av_gpioPinDirection(LED_PORT,LED2,set_OUT);
     66e:	4f ef       	ldi	r20, 0xFF	; 255
     670:	60 e4       	ldi	r22, 0x40	; 64
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	0e 94 7d 00 	call	0xfa	; 0xfa <Av_gpioPinDirection>
		Av_gpioPinWrite(LED_PORT,LED2,FALSE);
     678:	40 e0       	ldi	r20, 0x00	; 0
     67a:	60 e4       	ldi	r22, 0x40	; 64
     67c:	81 e0       	ldi	r24, 0x01	; 1
     67e:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     682:	0b c0       	rjmp	.+22     	; 0x69a <led_Init+0x8a>
		case LED3 :
		Av_gpioPinDirection(LED_PORT,LED3,set_OUT);
     684:	4f ef       	ldi	r20, 0xFF	; 255
     686:	60 e8       	ldi	r22, 0x80	; 128
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	0e 94 7d 00 	call	0xfa	; 0xfa <Av_gpioPinDirection>
		Av_gpioPinWrite(LED_PORT,LED3,FALSE);
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	60 e8       	ldi	r22, 0x80	; 128
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     698:	00 00       	nop
		default:
		break;
	}
}
     69a:	00 00       	nop
     69c:	0f 90       	pop	r0
     69e:	df 91       	pop	r29
     6a0:	cf 91       	pop	r28
     6a2:	08 95       	ret

000006a4 <led_On>:
/**
 * Description: Function to set the Led to On
 * @param led_Num the number of the Led [LED0,LED1,LED2,LED3]
 */
void led_On(led led_Num)
{
     6a4:	cf 93       	push	r28
     6a6:	df 93       	push	r29
     6a8:	1f 92       	push	r1
     6aa:	cd b7       	in	r28, 0x3d	; 61
     6ac:	de b7       	in	r29, 0x3e	; 62
     6ae:	89 83       	std	Y+1, r24	; 0x01
	switch(led_Num)
     6b0:	89 81       	ldd	r24, Y+1	; 0x01
     6b2:	88 2f       	mov	r24, r24
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	80 32       	cpi	r24, 0x20	; 32
     6b8:	91 05       	cpc	r25, r1
     6ba:	99 f0       	breq	.+38     	; 0x6e2 <led_On+0x3e>
     6bc:	81 32       	cpi	r24, 0x21	; 33
     6be:	91 05       	cpc	r25, r1
     6c0:	1c f4       	brge	.+6      	; 0x6c8 <led_On+0x24>
     6c2:	40 97       	sbiw	r24, 0x10	; 16
     6c4:	41 f0       	breq	.+16     	; 0x6d6 <led_On+0x32>
		break;
		case LED3 :
		Av_gpioPinWrite(LED_PORT,LED3,TRUE);
		break;
		default:
		break;
     6c6:	1f c0       	rjmp	.+62     	; 0x706 <led_On+0x62>
 * Description: Function to set the Led to On
 * @param led_Num the number of the Led [LED0,LED1,LED2,LED3]
 */
void led_On(led led_Num)
{
	switch(led_Num)
     6c8:	80 34       	cpi	r24, 0x40	; 64
     6ca:	91 05       	cpc	r25, r1
     6cc:	81 f0       	breq	.+32     	; 0x6ee <led_On+0x4a>
     6ce:	80 38       	cpi	r24, 0x80	; 128
     6d0:	91 05       	cpc	r25, r1
     6d2:	99 f0       	breq	.+38     	; 0x6fa <led_On+0x56>
		break;
		case LED3 :
		Av_gpioPinWrite(LED_PORT,LED3,TRUE);
		break;
		default:
		break;
     6d4:	18 c0       	rjmp	.+48     	; 0x706 <led_On+0x62>
void led_On(led led_Num)
{
	switch(led_Num)
	{
		case LED0 :
		Av_gpioPinWrite(LED_PORT,LED0,TRUE);
     6d6:	41 e0       	ldi	r20, 0x01	; 1
     6d8:	60 e1       	ldi	r22, 0x10	; 16
     6da:	81 e0       	ldi	r24, 0x01	; 1
     6dc:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     6e0:	12 c0       	rjmp	.+36     	; 0x706 <led_On+0x62>
		case LED1 :
		Av_gpioPinWrite(LED_PORT,LED1,TRUE);
     6e2:	41 e0       	ldi	r20, 0x01	; 1
     6e4:	60 e2       	ldi	r22, 0x20	; 32
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     6ec:	0c c0       	rjmp	.+24     	; 0x706 <led_On+0x62>
		case LED2 :
		Av_gpioPinWrite(LED_PORT,LED2,TRUE);
     6ee:	41 e0       	ldi	r20, 0x01	; 1
     6f0:	60 e4       	ldi	r22, 0x40	; 64
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     6f8:	06 c0       	rjmp	.+12     	; 0x706 <led_On+0x62>
		case LED3 :
		Av_gpioPinWrite(LED_PORT,LED3,TRUE);
     6fa:	41 e0       	ldi	r20, 0x01	; 1
     6fc:	60 e8       	ldi	r22, 0x80	; 128
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     704:	00 00       	nop
		default:
		break;
	}
}
     706:	00 00       	nop
     708:	0f 90       	pop	r0
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	08 95       	ret

00000710 <led_Off>:
/**
 * Description: Function to set the Led to Off.
 * @param led_Num the number of the Led [LED0,LED1,LED2,LED3].
 */
void led_Off(led led_Num)
{
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	1f 92       	push	r1
     716:	cd b7       	in	r28, 0x3d	; 61
     718:	de b7       	in	r29, 0x3e	; 62
     71a:	89 83       	std	Y+1, r24	; 0x01
	switch(led_Num)
     71c:	89 81       	ldd	r24, Y+1	; 0x01
     71e:	88 2f       	mov	r24, r24
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	80 32       	cpi	r24, 0x20	; 32
     724:	91 05       	cpc	r25, r1
     726:	99 f0       	breq	.+38     	; 0x74e <led_Off+0x3e>
     728:	81 32       	cpi	r24, 0x21	; 33
     72a:	91 05       	cpc	r25, r1
     72c:	1c f4       	brge	.+6      	; 0x734 <led_Off+0x24>
     72e:	40 97       	sbiw	r24, 0x10	; 16
     730:	41 f0       	breq	.+16     	; 0x742 <led_Off+0x32>
		break;
		case LED3 :
		Av_gpioPinWrite(LED_PORT,LED3,FALSE);
		break;
		default:
		break;
     732:	1f c0       	rjmp	.+62     	; 0x772 <led_Off+0x62>
 * Description: Function to set the Led to Off.
 * @param led_Num the number of the Led [LED0,LED1,LED2,LED3].
 */
void led_Off(led led_Num)
{
	switch(led_Num)
     734:	80 34       	cpi	r24, 0x40	; 64
     736:	91 05       	cpc	r25, r1
     738:	81 f0       	breq	.+32     	; 0x75a <led_Off+0x4a>
     73a:	80 38       	cpi	r24, 0x80	; 128
     73c:	91 05       	cpc	r25, r1
     73e:	99 f0       	breq	.+38     	; 0x766 <led_Off+0x56>
		break;
		case LED3 :
		Av_gpioPinWrite(LED_PORT,LED3,FALSE);
		break;
		default:
		break;
     740:	18 c0       	rjmp	.+48     	; 0x772 <led_Off+0x62>
void led_Off(led led_Num)
{
	switch(led_Num)
	{
		case LED0 :
		Av_gpioPinWrite(LED_PORT,LED0,FALSE);
     742:	40 e0       	ldi	r20, 0x00	; 0
     744:	60 e1       	ldi	r22, 0x10	; 16
     746:	81 e0       	ldi	r24, 0x01	; 1
     748:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     74c:	12 c0       	rjmp	.+36     	; 0x772 <led_Off+0x62>
		case LED1 :
		Av_gpioPinWrite(LED_PORT,LED1,FALSE);
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	60 e2       	ldi	r22, 0x20	; 32
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     758:	0c c0       	rjmp	.+24     	; 0x772 <led_Off+0x62>
		case LED2 :
		Av_gpioPinWrite(LED_PORT,LED2,FALSE);
     75a:	40 e0       	ldi	r20, 0x00	; 0
     75c:	60 e4       	ldi	r22, 0x40	; 64
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     764:	06 c0       	rjmp	.+12     	; 0x772 <led_Off+0x62>
		case LED3 :
		Av_gpioPinWrite(LED_PORT,LED3,FALSE);
     766:	40 e0       	ldi	r20, 0x00	; 0
     768:	60 e8       	ldi	r22, 0x80	; 128
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
		break;
     770:	00 00       	nop
		default:
		break;
	}
}
     772:	00 00       	nop
     774:	0f 90       	pop	r0
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	08 95       	ret

0000077c <MOTOR_FORWARD>:
	Av_gpioPinWrite(myPORTA , BIT4 , LOW);
	Av_gpioPinWrite(myPORTA , BIT5 , LOW);
	Av_gpioPinWrite(myPORTA , BIT6 , LOW);
	Av_gpioPinWrite(myPORTA , BIT7 , LOW);
	//AVE_timer1PWM(10,50);
}
     77c:	cf 93       	push	r28
     77e:	df 93       	push	r29
     780:	cd b7       	in	r28, 0x3d	; 61
     782:	de b7       	in	r29, 0x3e	; 62
     784:	41 e0       	ldi	r20, 0x01	; 1
     786:	60 e1       	ldi	r22, 0x10	; 16
     788:	80 e0       	ldi	r24, 0x00	; 0
     78a:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	60 e2       	ldi	r22, 0x20	; 32
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     798:	41 e0       	ldi	r20, 0x01	; 1
     79a:	60 e4       	ldi	r22, 0x40	; 64
     79c:	80 e0       	ldi	r24, 0x00	; 0
     79e:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     7a2:	40 e0       	ldi	r20, 0x00	; 0
     7a4:	60 e8       	ldi	r22, 0x80	; 128
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     7ac:	00 00       	nop
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	08 95       	ret

000007b4 <MOTOR_ROTATE>:
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	cd b7       	in	r28, 0x3d	; 61
     7ba:	de b7       	in	r29, 0x3e	; 62
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	60 e1       	ldi	r22, 0x10	; 16
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     7c6:	41 e0       	ldi	r20, 0x01	; 1
     7c8:	60 e2       	ldi	r22, 0x20	; 32
     7ca:	80 e0       	ldi	r24, 0x00	; 0
     7cc:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     7d0:	41 e0       	ldi	r20, 0x01	; 1
     7d2:	60 e4       	ldi	r22, 0x40	; 64
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	60 e8       	ldi	r22, 0x80	; 128
     7de:	80 e0       	ldi	r24, 0x00	; 0
     7e0:	0e 94 29 01 	call	0x252	; 0x252 <Av_gpioPinWrite>
     7e4:	00 00       	nop
     7e6:	df 91       	pop	r29
     7e8:	cf 91       	pop	r28
     7ea:	08 95       	ret

000007ec <main>:

int main(void)
{
     7ec:	af 92       	push	r10
     7ee:	cf 92       	push	r12
     7f0:	df 92       	push	r13
     7f2:	ef 92       	push	r14
     7f4:	0f 93       	push	r16
     7f6:	cf 93       	push	r28
     7f8:	df 93       	push	r29
     7fa:	00 d0       	rcall	.+0      	; 0x7fc <main+0x10>
     7fc:	cd b7       	in	r28, 0x3d	; 61
     7fe:	de b7       	in	r29, 0x3e	; 62
	volatile uint16 distance = 50;
     800:	82 e3       	ldi	r24, 0x32	; 50
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	9a 83       	std	Y+2, r25	; 0x02
     806:	89 83       	std	Y+1, r24	; 0x01
	Av_gpioPortDirection(myPORTA,set_OUT);
     808:	6f ef       	ldi	r22, 0xFF	; 255
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	0e 94 46 00 	call	0x8c	; 0x8c <Av_gpioPortDirection>
	Av_gpioPortDirection(myPORTC,set_OUT);
     810:	6f ef       	ldi	r22, 0xFF	; 255
     812:	82 e0       	ldi	r24, 0x02	; 2
     814:	0e 94 46 00 	call	0x8c	; 0x8c <Av_gpioPortDirection>
	Av_gpioPinDirection(myPORTD,BIT2,set_IN);
     818:	40 e0       	ldi	r20, 0x00	; 0
     81a:	64 e0       	ldi	r22, 0x04	; 4
     81c:	83 e0       	ldi	r24, 0x03	; 3
     81e:	0e 94 7d 00 	call	0xfa	; 0xfa <Av_gpioPinDirection>
	Av_gpioPinDirection(myPORTD,BIT5,set_OUT);
     822:	4f ef       	ldi	r20, 0xFF	; 255
     824:	60 e2       	ldi	r22, 0x20	; 32
     826:	83 e0       	ldi	r24, 0x03	; 3
     828:	0e 94 7d 00 	call	0xfa	; 0xfa <Av_gpioPinDirection>
	Av_ICU_Init();
     82c:	0e 94 b6 02 	call	0x56c	; 0x56c <Av_ICU_Init>
	Av_timer1Init(T1_PWM_PhaseCorrect_ICR1_MODE,T1_OC1A_CLEAR,T1_PRESCALER_1024,0,0,0,0,T1_POLLING);
     830:	a1 2c       	mov	r10, r1
     832:	c1 2c       	mov	r12, r1
     834:	d1 2c       	mov	r13, r1
     836:	e1 2c       	mov	r14, r1
     838:	00 e0       	ldi	r16, 0x00	; 0
     83a:	20 e0       	ldi	r18, 0x00	; 0
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	45 e0       	ldi	r20, 0x05	; 5
     840:	60 e8       	ldi	r22, 0x80	; 128
     842:	82 e1       	ldi	r24, 0x12	; 18
     844:	0e 94 05 07 	call	0xe0a	; 0xe0a <Av_timer1Init>
	Av_timer0Init(T0_NORMAL_MODE,T0_OC0_DIS,T0_PRESCALER_1,0,0,T0_POLLING);
     848:	e1 2c       	mov	r14, r1
     84a:	00 e0       	ldi	r16, 0x00	; 0
     84c:	20 e0       	ldi	r18, 0x00	; 0
     84e:	41 e0       	ldi	r20, 0x01	; 1
     850:	50 e0       	ldi	r21, 0x00	; 0
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	80 e0       	ldi	r24, 0x00	; 0
     856:	0e 94 67 04 	call	0x8ce	; 0x8ce <Av_timer0Init>
	Av_timer1Start();
     85a:	0e 94 ac 07 	call	0xf58	; 0xf58 <Av_timer1Start>
	Av_timer0Start();
     85e:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <Av_timer0Start>
	led_Init(LED0);
     862:	80 e1       	ldi	r24, 0x10	; 16
     864:	0e 94 08 03 	call	0x610	; 0x610 <led_Init>
	led_Init(LED1);
     868:	80 e2       	ldi	r24, 0x20	; 32
     86a:	0e 94 08 03 	call	0x610	; 0x610 <led_Init>
	//AVE_timer1PWM(50,500);
	while (1) 
    {
		Av_UltraSonicTrigger();
     86e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <Av_UltraSonicTrigger>
		distance = Av_UltraSonicDistanc();
     872:	0e 94 59 02 	call	0x4b2	; 0x4b2 <Av_UltraSonicDistanc>
     876:	dc 01       	movw	r26, r24
     878:	cb 01       	movw	r24, r22
     87a:	9a 83       	std	Y+2, r25	; 0x02
     87c:	89 83       	std	Y+1, r24	; 0x01
		if(distance < 30)
     87e:	89 81       	ldd	r24, Y+1	; 0x01
     880:	9a 81       	ldd	r25, Y+2	; 0x02
     882:	4e 97       	sbiw	r24, 0x1e	; 30
     884:	90 f4       	brcc	.+36     	; 0x8aa <__stack+0x4b>
			//Av_timer0Start();
			//Av_timer0Delay_ms(100);
			//Av_timer0Stop();
			//AVE_timer1PWM(30,500);
			//MOTOR_BACK();
			AVE_timer1PWM(20,500);
     886:	64 ef       	ldi	r22, 0xF4	; 244
     888:	71 e0       	ldi	r23, 0x01	; 1
     88a:	84 e1       	ldi	r24, 0x14	; 20
     88c:	0e 94 6d 08 	call	0x10da	; 0x10da <AVE_timer1PWM>
			MOTOR_ROTATE();
     890:	0e 94 da 03 	call	0x7b4	; 0x7b4 <MOTOR_ROTATE>
			Av_timer0Delay_ms(100);
     894:	84 e6       	ldi	r24, 0x64	; 100
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	0e 94 0c 05 	call	0xa18	; 0xa18 <Av_timer0Delay_ms>
			led_On(LED0);
     89c:	80 e1       	ldi	r24, 0x10	; 16
     89e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <led_On>
			led_Off(LED1);
     8a2:	80 e2       	ldi	r24, 0x20	; 32
     8a4:	0e 94 88 03 	call	0x710	; 0x710 <led_Off>
     8a8:	e2 cf       	rjmp	.-60     	; 0x86e <__stack+0xf>
		}
		else if(distance > 30)
     8aa:	89 81       	ldd	r24, Y+1	; 0x01
     8ac:	9a 81       	ldd	r25, Y+2	; 0x02
     8ae:	4f 97       	sbiw	r24, 0x1f	; 31
     8b0:	f0 f2       	brcs	.-68     	; 0x86e <__stack+0xf>
		{
			AVE_timer1PWM(50,500);
     8b2:	64 ef       	ldi	r22, 0xF4	; 244
     8b4:	71 e0       	ldi	r23, 0x01	; 1
     8b6:	82 e3       	ldi	r24, 0x32	; 50
     8b8:	0e 94 6d 08 	call	0x10da	; 0x10da <AVE_timer1PWM>
			MOTOR_FORWARD();
     8bc:	0e 94 be 03 	call	0x77c	; 0x77c <MOTOR_FORWARD>
			//Av_timer0Delay_ms(100);
			led_Off(LED0);
     8c0:	80 e1       	ldi	r24, 0x10	; 16
     8c2:	0e 94 88 03 	call	0x710	; 0x710 <led_Off>
			led_On(LED1);
     8c6:	80 e2       	ldi	r24, 0x20	; 32
     8c8:	0e 94 52 03 	call	0x6a4	; 0x6a4 <led_On>
		}else
		{
			//AVE_timer1PWM(70,500);
		}
	}
     8cc:	d0 cf       	rjmp	.-96     	; 0x86e <__stack+0xf>

000008ce <Av_timer0Init>:
	{
		Av_gpioPinWrite(swPWM2_PORT,swPWM2_PIN,TRUE);
		Av_timer2Delay_ns(time_On_ns);
		Av_gpioPinWrite(swPWM2_PORT,swPWM2_PIN,FALSE);
		Av_timer2Delay_ns(time_Off_ns);
	}
     8ce:	ef 92       	push	r14
     8d0:	0f 93       	push	r16
     8d2:	cf 93       	push	r28
     8d4:	df 93       	push	r29
     8d6:	cd b7       	in	r28, 0x3d	; 61
     8d8:	de b7       	in	r29, 0x3e	; 62
     8da:	27 97       	sbiw	r28, 0x07	; 7
     8dc:	0f b6       	in	r0, 0x3f	; 63
     8de:	f8 94       	cli
     8e0:	de bf       	out	0x3e, r29	; 62
     8e2:	0f be       	out	0x3f, r0	; 63
     8e4:	cd bf       	out	0x3d, r28	; 61
     8e6:	89 83       	std	Y+1, r24	; 0x01
     8e8:	6a 83       	std	Y+2, r22	; 0x02
     8ea:	5c 83       	std	Y+4, r21	; 0x04
     8ec:	4b 83       	std	Y+3, r20	; 0x03
     8ee:	2d 83       	std	Y+5, r18	; 0x05
     8f0:	0e 83       	std	Y+6, r16	; 0x06
     8f2:	ef 82       	std	Y+7, r14	; 0x07
     8f4:	83 e5       	ldi	r24, 0x53	; 83
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	23 e5       	ldi	r18, 0x53	; 83
     8fa:	30 e0       	ldi	r19, 0x00	; 0
     8fc:	f9 01       	movw	r30, r18
     8fe:	30 81       	ld	r19, Z
     900:	49 81       	ldd	r20, Y+1	; 0x01
     902:	2a 81       	ldd	r18, Y+2	; 0x02
     904:	24 2b       	or	r18, r20
     906:	23 2b       	or	r18, r19
     908:	fc 01       	movw	r30, r24
     90a:	20 83       	st	Z, r18
     90c:	82 e5       	ldi	r24, 0x52	; 82
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	2d 81       	ldd	r18, Y+5	; 0x05
     912:	fc 01       	movw	r30, r24
     914:	20 83       	st	Z, r18
     916:	8c e5       	ldi	r24, 0x5C	; 92
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	2e 81       	ldd	r18, Y+6	; 0x06
     91c:	fc 01       	movw	r30, r24
     91e:	20 83       	st	Z, r18
     920:	89 e5       	ldi	r24, 0x59	; 89
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	29 e5       	ldi	r18, 0x59	; 89
     926:	30 e0       	ldi	r19, 0x00	; 0
     928:	f9 01       	movw	r30, r18
     92a:	30 81       	ld	r19, Z
     92c:	2f 81       	ldd	r18, Y+7	; 0x07
     92e:	23 2b       	or	r18, r19
     930:	fc 01       	movw	r30, r24
     932:	20 83       	st	Z, r18
     934:	8b 81       	ldd	r24, Y+3	; 0x03
     936:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <prescaller0>
     93a:	8b 81       	ldd	r24, Y+3	; 0x03
     93c:	9c 81       	ldd	r25, Y+4	; 0x04
     93e:	82 30       	cpi	r24, 0x02	; 2
     940:	91 05       	cpc	r25, r1
     942:	f1 f0       	breq	.+60     	; 0x980 <Av_timer0Init+0xb2>
     944:	83 30       	cpi	r24, 0x03	; 3
     946:	91 05       	cpc	r25, r1
     948:	28 f4       	brcc	.+10     	; 0x954 <Av_timer0Init+0x86>
     94a:	00 97       	sbiw	r24, 0x00	; 0
     94c:	69 f0       	breq	.+26     	; 0x968 <Av_timer0Init+0x9a>
     94e:	01 97       	sbiw	r24, 0x01	; 1
     950:	81 f0       	breq	.+32     	; 0x972 <Av_timer0Init+0xa4>
     952:	32 c0       	rjmp	.+100    	; 0x9b8 <Av_timer0Init+0xea>
     954:	84 30       	cpi	r24, 0x04	; 4
     956:	91 05       	cpc	r25, r1
     958:	09 f1       	breq	.+66     	; 0x99c <Av_timer0Init+0xce>
     95a:	84 30       	cpi	r24, 0x04	; 4
     95c:	91 05       	cpc	r25, r1
     95e:	b8 f0       	brcs	.+46     	; 0x98e <Av_timer0Init+0xc0>
     960:	81 30       	cpi	r24, 0x01	; 1
     962:	91 40       	sbci	r25, 0x01	; 1
     964:	11 f1       	breq	.+68     	; 0x9aa <Av_timer0Init+0xdc>
     966:	28 c0       	rjmp	.+80     	; 0x9b8 <Av_timer0Init+0xea>
     968:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <preScaller_TIMER0+0x1>
     96c:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <preScaller_TIMER0>
     970:	23 c0       	rjmp	.+70     	; 0x9b8 <Av_timer0Init+0xea>
     972:	81 e0       	ldi	r24, 0x01	; 1
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <preScaller_TIMER0+0x1>
     97a:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <preScaller_TIMER0>
     97e:	1c c0       	rjmp	.+56     	; 0x9b8 <Av_timer0Init+0xea>
     980:	88 e0       	ldi	r24, 0x08	; 8
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <preScaller_TIMER0+0x1>
     988:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <preScaller_TIMER0>
     98c:	15 c0       	rjmp	.+42     	; 0x9b8 <Av_timer0Init+0xea>
     98e:	80 e4       	ldi	r24, 0x40	; 64
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <preScaller_TIMER0+0x1>
     996:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <preScaller_TIMER0>
     99a:	0e c0       	rjmp	.+28     	; 0x9b8 <Av_timer0Init+0xea>
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <preScaller_TIMER0+0x1>
     9a4:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <preScaller_TIMER0>
     9a8:	07 c0       	rjmp	.+14     	; 0x9b8 <Av_timer0Init+0xea>
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	94 e0       	ldi	r25, 0x04	; 4
     9ae:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <preScaller_TIMER0+0x1>
     9b2:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <preScaller_TIMER0>
     9b6:	00 00       	nop
     9b8:	00 00       	nop
     9ba:	27 96       	adiw	r28, 0x07	; 7
     9bc:	0f b6       	in	r0, 0x3f	; 63
     9be:	f8 94       	cli
     9c0:	de bf       	out	0x3e, r29	; 62
     9c2:	0f be       	out	0x3f, r0	; 63
     9c4:	cd bf       	out	0x3d, r28	; 61
     9c6:	df 91       	pop	r29
     9c8:	cf 91       	pop	r28
     9ca:	0f 91       	pop	r16
     9cc:	ef 90       	pop	r14
     9ce:	08 95       	ret

000009d0 <Av_timer0Start>:
     9d0:	cf 93       	push	r28
     9d2:	df 93       	push	r29
     9d4:	cd b7       	in	r28, 0x3d	; 61
     9d6:	de b7       	in	r29, 0x3e	; 62
     9d8:	40 91 6a 00 	lds	r20, 0x006A	; 0x80006a <prescaller0>
     9dc:	83 e5       	ldi	r24, 0x53	; 83
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	23 e5       	ldi	r18, 0x53	; 83
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	f9 01       	movw	r30, r18
     9e6:	20 81       	ld	r18, Z
     9e8:	24 2b       	or	r18, r20
     9ea:	fc 01       	movw	r30, r24
     9ec:	20 83       	st	Z, r18
     9ee:	00 00       	nop
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	08 95       	ret

000009f6 <Av_timer0Stop>:
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	cd b7       	in	r28, 0x3d	; 61
     9fc:	de b7       	in	r29, 0x3e	; 62
     9fe:	83 e5       	ldi	r24, 0x53	; 83
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	23 e5       	ldi	r18, 0x53	; 83
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	f9 01       	movw	r30, r18
     a08:	20 81       	ld	r18, Z
     a0a:	28 7f       	andi	r18, 0xF8	; 248
     a0c:	fc 01       	movw	r30, r24
     a0e:	20 83       	st	Z, r18
     a10:	00 00       	nop
     a12:	df 91       	pop	r29
     a14:	cf 91       	pop	r28
     a16:	08 95       	ret

00000a18 <Av_timer0Delay_ms>:
     a18:	2f 92       	push	r2
     a1a:	3f 92       	push	r3
     a1c:	4f 92       	push	r4
     a1e:	5f 92       	push	r5
     a20:	6f 92       	push	r6
     a22:	7f 92       	push	r7
     a24:	8f 92       	push	r8
     a26:	9f 92       	push	r9
     a28:	af 92       	push	r10
     a2a:	bf 92       	push	r11
     a2c:	cf 92       	push	r12
     a2e:	df 92       	push	r13
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	2a 97       	sbiw	r28, 0x0a	; 10
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	de bf       	out	0x3e, r29	; 62
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	cd bf       	out	0x3d, r28	; 61
     a4c:	9a 87       	std	Y+10, r25	; 0x0a
     a4e:	89 87       	std	Y+9, r24	; 0x09
     a50:	89 85       	ldd	r24, Y+9	; 0x09
     a52:	9a 85       	ldd	r25, Y+10	; 0x0a
     a54:	1c 01       	movw	r2, r24
     a56:	41 2c       	mov	r4, r1
     a58:	51 2c       	mov	r5, r1
     a5a:	61 2c       	mov	r6, r1
     a5c:	71 2c       	mov	r7, r1
     a5e:	43 01       	movw	r8, r6
     a60:	a1 2c       	mov	r10, r1
     a62:	0f 2e       	mov	r0, r31
     a64:	f2 e1       	ldi	r31, 0x12	; 18
     a66:	bf 2e       	mov	r11, r31
     a68:	f0 2d       	mov	r31, r0
     a6a:	0f 2e       	mov	r0, r31
     a6c:	fa e7       	ldi	r31, 0x7A	; 122
     a6e:	cf 2e       	mov	r12, r31
     a70:	f0 2d       	mov	r31, r0
     a72:	d1 2c       	mov	r13, r1
     a74:	e1 2c       	mov	r14, r1
     a76:	f1 2c       	mov	r15, r1
     a78:	00 e0       	ldi	r16, 0x00	; 0
     a7a:	10 e0       	ldi	r17, 0x00	; 0
     a7c:	22 2d       	mov	r18, r2
     a7e:	33 2d       	mov	r19, r3
     a80:	44 2d       	mov	r20, r4
     a82:	55 2d       	mov	r21, r5
     a84:	66 2d       	mov	r22, r6
     a86:	77 2d       	mov	r23, r7
     a88:	88 2d       	mov	r24, r8
     a8a:	99 2d       	mov	r25, r9
     a8c:	0e 94 4a 0b 	call	0x1694	; 0x1694 <__muldi3>
     a90:	22 2e       	mov	r2, r18
     a92:	33 2e       	mov	r3, r19
     a94:	44 2e       	mov	r4, r20
     a96:	55 2e       	mov	r5, r21
     a98:	66 2e       	mov	r6, r22
     a9a:	77 2e       	mov	r7, r23
     a9c:	88 2e       	mov	r8, r24
     a9e:	99 2e       	mov	r9, r25
     aa0:	a2 2c       	mov	r10, r2
     aa2:	b3 2c       	mov	r11, r3
     aa4:	c4 2c       	mov	r12, r4
     aa6:	d5 2c       	mov	r13, r5
     aa8:	e6 2c       	mov	r14, r6
     aaa:	f7 2c       	mov	r15, r7
     aac:	08 2d       	mov	r16, r8
     aae:	19 2d       	mov	r17, r9
     ab0:	2a 2d       	mov	r18, r10
     ab2:	3b 2d       	mov	r19, r11
     ab4:	4c 2d       	mov	r20, r12
     ab6:	5d 2d       	mov	r21, r13
     ab8:	6e 2d       	mov	r22, r14
     aba:	7f 2d       	mov	r23, r15
     abc:	80 2f       	mov	r24, r16
     abe:	91 2f       	mov	r25, r17
     ac0:	0e 94 b8 09 	call	0x1370	; 0x1370 <__floatdisf>
     ac4:	6b 01       	movw	r12, r22
     ac6:	7c 01       	movw	r14, r24
     ac8:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <preScaller_TIMER0>
     acc:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <preScaller_TIMER0+0x1>
     ad0:	cc 01       	movw	r24, r24
     ad2:	a0 e0       	ldi	r26, 0x00	; 0
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	bc 01       	movw	r22, r24
     ad8:	cd 01       	movw	r24, r26
     ada:	0e 94 be 09 	call	0x137c	; 0x137c <__floatunsisf>
     ade:	dc 01       	movw	r26, r24
     ae0:	cb 01       	movw	r24, r22
     ae2:	20 e0       	ldi	r18, 0x00	; 0
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	40 e8       	ldi	r20, 0x80	; 128
     ae8:	53 e4       	ldi	r21, 0x43	; 67
     aea:	bc 01       	movw	r22, r24
     aec:	cd 01       	movw	r24, r26
     aee:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     af2:	dc 01       	movw	r26, r24
     af4:	cb 01       	movw	r24, r22
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	4a e7       	ldi	r20, 0x7A	; 122
     afc:	54 e4       	ldi	r21, 0x44	; 68
     afe:	bc 01       	movw	r22, r24
     b00:	cd 01       	movw	r24, r26
     b02:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     b06:	dc 01       	movw	r26, r24
     b08:	cb 01       	movw	r24, r22
     b0a:	9c 01       	movw	r18, r24
     b0c:	ad 01       	movw	r20, r26
     b0e:	c7 01       	movw	r24, r14
     b10:	b6 01       	movw	r22, r12
     b12:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__divsf3>
     b16:	dc 01       	movw	r26, r24
     b18:	cb 01       	movw	r24, r22
     b1a:	bc 01       	movw	r22, r24
     b1c:	cd 01       	movw	r24, r26
     b1e:	0e 94 4d 09 	call	0x129a	; 0x129a <__fixsfdi>
     b22:	a2 2e       	mov	r10, r18
     b24:	b3 2e       	mov	r11, r19
     b26:	c4 2e       	mov	r12, r20
     b28:	d5 2e       	mov	r13, r21
     b2a:	e6 2e       	mov	r14, r22
     b2c:	f7 2e       	mov	r15, r23
     b2e:	08 2f       	mov	r16, r24
     b30:	19 2f       	mov	r17, r25
     b32:	a9 82       	std	Y+1, r10	; 0x01
     b34:	ba 82       	std	Y+2, r11	; 0x02
     b36:	cb 82       	std	Y+3, r12	; 0x03
     b38:	dc 82       	std	Y+4, r13	; 0x04
     b3a:	ed 82       	std	Y+5, r14	; 0x05
     b3c:	fe 82       	std	Y+6, r15	; 0x06
     b3e:	0f 83       	std	Y+7, r16	; 0x07
     b40:	18 87       	std	Y+8, r17	; 0x08
     b42:	82 e5       	ldi	r24, 0x52	; 82
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	fc 01       	movw	r30, r24
     b48:	10 82       	st	Z, r1
     b4a:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <Av_timer0Start>
     b4e:	14 c0       	rjmp	.+40     	; 0xb78 <Av_timer0Delay_ms+0x160>
     b50:	00 00       	nop
     b52:	88 e5       	ldi	r24, 0x58	; 88
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	fc 01       	movw	r30, r24
     b58:	80 81       	ld	r24, Z
     b5a:	88 2f       	mov	r24, r24
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	81 70       	andi	r24, 0x01	; 1
     b60:	99 27       	eor	r25, r25
     b62:	89 2b       	or	r24, r25
     b64:	b1 f3       	breq	.-20     	; 0xb52 <Av_timer0Delay_ms+0x13a>
     b66:	88 e5       	ldi	r24, 0x58	; 88
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	28 e5       	ldi	r18, 0x58	; 88
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	f9 01       	movw	r30, r18
     b70:	20 81       	ld	r18, Z
     b72:	21 60       	ori	r18, 0x01	; 1
     b74:	fc 01       	movw	r30, r24
     b76:	20 83       	st	Z, r18
     b78:	a9 80       	ldd	r10, Y+1	; 0x01
     b7a:	ba 80       	ldd	r11, Y+2	; 0x02
     b7c:	cb 80       	ldd	r12, Y+3	; 0x03
     b7e:	dc 80       	ldd	r13, Y+4	; 0x04
     b80:	ed 80       	ldd	r14, Y+5	; 0x05
     b82:	fe 80       	ldd	r15, Y+6	; 0x06
     b84:	0f 81       	ldd	r16, Y+7	; 0x07
     b86:	18 85       	ldd	r17, Y+8	; 0x08
     b88:	2a 2d       	mov	r18, r10
     b8a:	3b 2d       	mov	r19, r11
     b8c:	4c 2d       	mov	r20, r12
     b8e:	5d 2d       	mov	r21, r13
     b90:	6e 2d       	mov	r22, r14
     b92:	7f 2d       	mov	r23, r15
     b94:	80 2f       	mov	r24, r16
     b96:	91 2f       	mov	r25, r17
     b98:	af ef       	ldi	r26, 0xFF	; 255
     b9a:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__adddi3_s8>
     b9e:	22 2e       	mov	r2, r18
     ba0:	33 2e       	mov	r3, r19
     ba2:	44 2e       	mov	r4, r20
     ba4:	55 2e       	mov	r5, r21
     ba6:	66 2e       	mov	r6, r22
     ba8:	77 2e       	mov	r7, r23
     baa:	88 2e       	mov	r8, r24
     bac:	99 2e       	mov	r9, r25
     bae:	29 82       	std	Y+1, r2	; 0x01
     bb0:	3a 82       	std	Y+2, r3	; 0x02
     bb2:	4b 82       	std	Y+3, r4	; 0x03
     bb4:	5c 82       	std	Y+4, r5	; 0x04
     bb6:	6d 82       	std	Y+5, r6	; 0x05
     bb8:	7e 82       	std	Y+6, r7	; 0x06
     bba:	8f 82       	std	Y+7, r8	; 0x07
     bbc:	98 86       	std	Y+8, r9	; 0x08
     bbe:	2a 2d       	mov	r18, r10
     bc0:	3b 2d       	mov	r19, r11
     bc2:	4c 2d       	mov	r20, r12
     bc4:	5d 2d       	mov	r21, r13
     bc6:	6e 2d       	mov	r22, r14
     bc8:	7f 2d       	mov	r23, r15
     bca:	80 2f       	mov	r24, r16
     bcc:	91 2f       	mov	r25, r17
     bce:	a0 e0       	ldi	r26, 0x00	; 0
     bd0:	0e 94 af 0b 	call	0x175e	; 0x175e <__cmpdi2_s8>
     bd4:	11 f0       	breq	.+4      	; 0xbda <Av_timer0Delay_ms+0x1c2>
     bd6:	0c f0       	brlt	.+2      	; 0xbda <Av_timer0Delay_ms+0x1c2>
     bd8:	bb cf       	rjmp	.-138    	; 0xb50 <Av_timer0Delay_ms+0x138>
     bda:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <Av_timer0Stop>
     bde:	00 00       	nop
     be0:	2a 96       	adiw	r28, 0x0a	; 10
     be2:	0f b6       	in	r0, 0x3f	; 63
     be4:	f8 94       	cli
     be6:	de bf       	out	0x3e, r29	; 62
     be8:	0f be       	out	0x3f, r0	; 63
     bea:	cd bf       	out	0x3d, r28	; 61
     bec:	df 91       	pop	r29
     bee:	cf 91       	pop	r28
     bf0:	1f 91       	pop	r17
     bf2:	0f 91       	pop	r16
     bf4:	ff 90       	pop	r15
     bf6:	ef 90       	pop	r14
     bf8:	df 90       	pop	r13
     bfa:	cf 90       	pop	r12
     bfc:	bf 90       	pop	r11
     bfe:	af 90       	pop	r10
     c00:	9f 90       	pop	r9
     c02:	8f 90       	pop	r8
     c04:	7f 90       	pop	r7
     c06:	6f 90       	pop	r6
     c08:	5f 90       	pop	r5
     c0a:	4f 90       	pop	r4
     c0c:	3f 90       	pop	r3
     c0e:	2f 90       	pop	r2
     c10:	08 95       	ret

00000c12 <Av_timer0Delay_ns>:
     c12:	2f 92       	push	r2
     c14:	3f 92       	push	r3
     c16:	4f 92       	push	r4
     c18:	5f 92       	push	r5
     c1a:	6f 92       	push	r6
     c1c:	7f 92       	push	r7
     c1e:	8f 92       	push	r8
     c20:	9f 92       	push	r9
     c22:	af 92       	push	r10
     c24:	bf 92       	push	r11
     c26:	cf 92       	push	r12
     c28:	df 92       	push	r13
     c2a:	ef 92       	push	r14
     c2c:	ff 92       	push	r15
     c2e:	0f 93       	push	r16
     c30:	1f 93       	push	r17
     c32:	cf 93       	push	r28
     c34:	df 93       	push	r29
     c36:	cd b7       	in	r28, 0x3d	; 61
     c38:	de b7       	in	r29, 0x3e	; 62
     c3a:	2c 97       	sbiw	r28, 0x0c	; 12
     c3c:	0f b6       	in	r0, 0x3f	; 63
     c3e:	f8 94       	cli
     c40:	de bf       	out	0x3e, r29	; 62
     c42:	0f be       	out	0x3f, r0	; 63
     c44:	cd bf       	out	0x3d, r28	; 61
     c46:	69 87       	std	Y+9, r22	; 0x09
     c48:	7a 87       	std	Y+10, r23	; 0x0a
     c4a:	8b 87       	std	Y+11, r24	; 0x0b
     c4c:	9c 87       	std	Y+12, r25	; 0x0c
     c4e:	89 85       	ldd	r24, Y+9	; 0x09
     c50:	9a 85       	ldd	r25, Y+10	; 0x0a
     c52:	ab 85       	ldd	r26, Y+11	; 0x0b
     c54:	bc 85       	ldd	r27, Y+12	; 0x0c
     c56:	1c 01       	movw	r2, r24
     c58:	2d 01       	movw	r4, r26
     c5a:	61 2c       	mov	r6, r1
     c5c:	71 2c       	mov	r7, r1
     c5e:	43 01       	movw	r8, r6
     c60:	a1 2c       	mov	r10, r1
     c62:	0f 2e       	mov	r0, r31
     c64:	f2 e1       	ldi	r31, 0x12	; 18
     c66:	bf 2e       	mov	r11, r31
     c68:	f0 2d       	mov	r31, r0
     c6a:	0f 2e       	mov	r0, r31
     c6c:	fa e7       	ldi	r31, 0x7A	; 122
     c6e:	cf 2e       	mov	r12, r31
     c70:	f0 2d       	mov	r31, r0
     c72:	d1 2c       	mov	r13, r1
     c74:	e1 2c       	mov	r14, r1
     c76:	f1 2c       	mov	r15, r1
     c78:	00 e0       	ldi	r16, 0x00	; 0
     c7a:	10 e0       	ldi	r17, 0x00	; 0
     c7c:	22 2d       	mov	r18, r2
     c7e:	33 2d       	mov	r19, r3
     c80:	44 2d       	mov	r20, r4
     c82:	55 2d       	mov	r21, r5
     c84:	66 2d       	mov	r22, r6
     c86:	77 2d       	mov	r23, r7
     c88:	88 2d       	mov	r24, r8
     c8a:	99 2d       	mov	r25, r9
     c8c:	0e 94 4a 0b 	call	0x1694	; 0x1694 <__muldi3>
     c90:	22 2e       	mov	r2, r18
     c92:	33 2e       	mov	r3, r19
     c94:	44 2e       	mov	r4, r20
     c96:	55 2e       	mov	r5, r21
     c98:	66 2e       	mov	r6, r22
     c9a:	77 2e       	mov	r7, r23
     c9c:	88 2e       	mov	r8, r24
     c9e:	99 2e       	mov	r9, r25
     ca0:	a2 2c       	mov	r10, r2
     ca2:	b3 2c       	mov	r11, r3
     ca4:	c4 2c       	mov	r12, r4
     ca6:	d5 2c       	mov	r13, r5
     ca8:	e6 2c       	mov	r14, r6
     caa:	f7 2c       	mov	r15, r7
     cac:	08 2d       	mov	r16, r8
     cae:	19 2d       	mov	r17, r9
     cb0:	2a 2d       	mov	r18, r10
     cb2:	3b 2d       	mov	r19, r11
     cb4:	4c 2d       	mov	r20, r12
     cb6:	5d 2d       	mov	r21, r13
     cb8:	6e 2d       	mov	r22, r14
     cba:	7f 2d       	mov	r23, r15
     cbc:	80 2f       	mov	r24, r16
     cbe:	91 2f       	mov	r25, r17
     cc0:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <__floatundisf>
     cc4:	6b 01       	movw	r12, r22
     cc6:	7c 01       	movw	r14, r24
     cc8:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <preScaller_TIMER0>
     ccc:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <preScaller_TIMER0+0x1>
     cd0:	cc 01       	movw	r24, r24
     cd2:	a0 e0       	ldi	r26, 0x00	; 0
     cd4:	b0 e0       	ldi	r27, 0x00	; 0
     cd6:	bc 01       	movw	r22, r24
     cd8:	cd 01       	movw	r24, r26
     cda:	0e 94 be 09 	call	0x137c	; 0x137c <__floatunsisf>
     cde:	dc 01       	movw	r26, r24
     ce0:	cb 01       	movw	r24, r22
     ce2:	20 e0       	ldi	r18, 0x00	; 0
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	40 e8       	ldi	r20, 0x80	; 128
     ce8:	53 e4       	ldi	r21, 0x43	; 67
     cea:	bc 01       	movw	r22, r24
     cec:	cd 01       	movw	r24, r26
     cee:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     cf2:	dc 01       	movw	r26, r24
     cf4:	cb 01       	movw	r24, r22
     cf6:	28 e2       	ldi	r18, 0x28	; 40
     cf8:	3b e6       	ldi	r19, 0x6B	; 107
     cfa:	4e e6       	ldi	r20, 0x6E	; 110
     cfc:	5e e4       	ldi	r21, 0x4E	; 78
     cfe:	bc 01       	movw	r22, r24
     d00:	cd 01       	movw	r24, r26
     d02:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     d06:	dc 01       	movw	r26, r24
     d08:	cb 01       	movw	r24, r22
     d0a:	9c 01       	movw	r18, r24
     d0c:	ad 01       	movw	r20, r26
     d0e:	c7 01       	movw	r24, r14
     d10:	b6 01       	movw	r22, r12
     d12:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__divsf3>
     d16:	dc 01       	movw	r26, r24
     d18:	cb 01       	movw	r24, r22
     d1a:	bc 01       	movw	r22, r24
     d1c:	cd 01       	movw	r24, r26
     d1e:	0e 94 4d 09 	call	0x129a	; 0x129a <__fixsfdi>
     d22:	a2 2e       	mov	r10, r18
     d24:	b3 2e       	mov	r11, r19
     d26:	c4 2e       	mov	r12, r20
     d28:	d5 2e       	mov	r13, r21
     d2a:	e6 2e       	mov	r14, r22
     d2c:	f7 2e       	mov	r15, r23
     d2e:	08 2f       	mov	r16, r24
     d30:	19 2f       	mov	r17, r25
     d32:	a9 82       	std	Y+1, r10	; 0x01
     d34:	ba 82       	std	Y+2, r11	; 0x02
     d36:	cb 82       	std	Y+3, r12	; 0x03
     d38:	dc 82       	std	Y+4, r13	; 0x04
     d3a:	ed 82       	std	Y+5, r14	; 0x05
     d3c:	fe 82       	std	Y+6, r15	; 0x06
     d3e:	0f 83       	std	Y+7, r16	; 0x07
     d40:	18 87       	std	Y+8, r17	; 0x08
     d42:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <Av_timer0Start>
     d46:	14 c0       	rjmp	.+40     	; 0xd70 <Av_timer0Delay_ns+0x15e>
     d48:	00 00       	nop
     d4a:	88 e5       	ldi	r24, 0x58	; 88
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	fc 01       	movw	r30, r24
     d50:	80 81       	ld	r24, Z
     d52:	88 2f       	mov	r24, r24
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	81 70       	andi	r24, 0x01	; 1
     d58:	99 27       	eor	r25, r25
     d5a:	89 2b       	or	r24, r25
     d5c:	b1 f3       	breq	.-20     	; 0xd4a <Av_timer0Delay_ns+0x138>
     d5e:	88 e5       	ldi	r24, 0x58	; 88
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	28 e5       	ldi	r18, 0x58	; 88
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	f9 01       	movw	r30, r18
     d68:	20 81       	ld	r18, Z
     d6a:	21 60       	ori	r18, 0x01	; 1
     d6c:	fc 01       	movw	r30, r24
     d6e:	20 83       	st	Z, r18
     d70:	a9 80       	ldd	r10, Y+1	; 0x01
     d72:	ba 80       	ldd	r11, Y+2	; 0x02
     d74:	cb 80       	ldd	r12, Y+3	; 0x03
     d76:	dc 80       	ldd	r13, Y+4	; 0x04
     d78:	ed 80       	ldd	r14, Y+5	; 0x05
     d7a:	fe 80       	ldd	r15, Y+6	; 0x06
     d7c:	0f 81       	ldd	r16, Y+7	; 0x07
     d7e:	18 85       	ldd	r17, Y+8	; 0x08
     d80:	2a 2d       	mov	r18, r10
     d82:	3b 2d       	mov	r19, r11
     d84:	4c 2d       	mov	r20, r12
     d86:	5d 2d       	mov	r21, r13
     d88:	6e 2d       	mov	r22, r14
     d8a:	7f 2d       	mov	r23, r15
     d8c:	80 2f       	mov	r24, r16
     d8e:	91 2f       	mov	r25, r17
     d90:	af ef       	ldi	r26, 0xFF	; 255
     d92:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__adddi3_s8>
     d96:	22 2e       	mov	r2, r18
     d98:	33 2e       	mov	r3, r19
     d9a:	44 2e       	mov	r4, r20
     d9c:	55 2e       	mov	r5, r21
     d9e:	66 2e       	mov	r6, r22
     da0:	77 2e       	mov	r7, r23
     da2:	88 2e       	mov	r8, r24
     da4:	99 2e       	mov	r9, r25
     da6:	29 82       	std	Y+1, r2	; 0x01
     da8:	3a 82       	std	Y+2, r3	; 0x02
     daa:	4b 82       	std	Y+3, r4	; 0x03
     dac:	5c 82       	std	Y+4, r5	; 0x04
     dae:	6d 82       	std	Y+5, r6	; 0x05
     db0:	7e 82       	std	Y+6, r7	; 0x06
     db2:	8f 82       	std	Y+7, r8	; 0x07
     db4:	98 86       	std	Y+8, r9	; 0x08
     db6:	2a 2d       	mov	r18, r10
     db8:	3b 2d       	mov	r19, r11
     dba:	4c 2d       	mov	r20, r12
     dbc:	5d 2d       	mov	r21, r13
     dbe:	6e 2d       	mov	r22, r14
     dc0:	7f 2d       	mov	r23, r15
     dc2:	80 2f       	mov	r24, r16
     dc4:	91 2f       	mov	r25, r17
     dc6:	a0 e0       	ldi	r26, 0x00	; 0
     dc8:	0e 94 af 0b 	call	0x175e	; 0x175e <__cmpdi2_s8>
     dcc:	11 f0       	breq	.+4      	; 0xdd2 <Av_timer0Delay_ns+0x1c0>
     dce:	0c f0       	brlt	.+2      	; 0xdd2 <Av_timer0Delay_ns+0x1c0>
     dd0:	bb cf       	rjmp	.-138    	; 0xd48 <Av_timer0Delay_ns+0x136>
     dd2:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <Av_timer0Stop>
     dd6:	00 00       	nop
     dd8:	2c 96       	adiw	r28, 0x0c	; 12
     dda:	0f b6       	in	r0, 0x3f	; 63
     ddc:	f8 94       	cli
     dde:	de bf       	out	0x3e, r29	; 62
     de0:	0f be       	out	0x3f, r0	; 63
     de2:	cd bf       	out	0x3d, r28	; 61
     de4:	df 91       	pop	r29
     de6:	cf 91       	pop	r28
     de8:	1f 91       	pop	r17
     dea:	0f 91       	pop	r16
     dec:	ff 90       	pop	r15
     dee:	ef 90       	pop	r14
     df0:	df 90       	pop	r13
     df2:	cf 90       	pop	r12
     df4:	bf 90       	pop	r11
     df6:	af 90       	pop	r10
     df8:	9f 90       	pop	r9
     dfa:	8f 90       	pop	r8
     dfc:	7f 90       	pop	r7
     dfe:	6f 90       	pop	r6
     e00:	5f 90       	pop	r5
     e02:	4f 90       	pop	r4
     e04:	3f 90       	pop	r3
     e06:	2f 90       	pop	r2
     e08:	08 95       	ret

00000e0a <Av_timer1Init>:
     e0a:	af 92       	push	r10
     e0c:	cf 92       	push	r12
     e0e:	df 92       	push	r13
     e10:	ef 92       	push	r14
     e12:	0f 93       	push	r16
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	cd b7       	in	r28, 0x3d	; 61
     e1a:	de b7       	in	r29, 0x3e	; 62
     e1c:	2a 97       	sbiw	r28, 0x0a	; 10
     e1e:	0f b6       	in	r0, 0x3f	; 63
     e20:	f8 94       	cli
     e22:	de bf       	out	0x3e, r29	; 62
     e24:	0f be       	out	0x3f, r0	; 63
     e26:	cd bf       	out	0x3d, r28	; 61
     e28:	89 83       	std	Y+1, r24	; 0x01
     e2a:	6a 83       	std	Y+2, r22	; 0x02
     e2c:	4b 83       	std	Y+3, r20	; 0x03
     e2e:	3d 83       	std	Y+5, r19	; 0x05
     e30:	2c 83       	std	Y+4, r18	; 0x04
     e32:	0e 83       	std	Y+6, r16	; 0x06
     e34:	ef 82       	std	Y+7, r14	; 0x07
     e36:	d9 86       	std	Y+9, r13	; 0x09
     e38:	c8 86       	std	Y+8, r12	; 0x08
     e3a:	aa 86       	std	Y+10, r10	; 0x0a
     e3c:	8f e4       	ldi	r24, 0x4F	; 79
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	2f e4       	ldi	r18, 0x4F	; 79
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	f9 01       	movw	r30, r18
     e46:	20 81       	ld	r18, Z
     e48:	32 2f       	mov	r19, r18
     e4a:	29 81       	ldd	r18, Y+1	; 0x01
     e4c:	23 70       	andi	r18, 0x03	; 3
     e4e:	23 2b       	or	r18, r19
     e50:	fc 01       	movw	r30, r24
     e52:	20 83       	st	Z, r18
     e54:	8f e4       	ldi	r24, 0x4F	; 79
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	2f e4       	ldi	r18, 0x4F	; 79
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	f9 01       	movw	r30, r18
     e5e:	30 81       	ld	r19, Z
     e60:	2a 81       	ldd	r18, Y+2	; 0x02
     e62:	23 2b       	or	r18, r19
     e64:	fc 01       	movw	r30, r24
     e66:	20 83       	st	Z, r18
     e68:	8e e4       	ldi	r24, 0x4E	; 78
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	2e e4       	ldi	r18, 0x4E	; 78
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	f9 01       	movw	r30, r18
     e72:	20 81       	ld	r18, Z
     e74:	32 2f       	mov	r19, r18
     e76:	29 81       	ldd	r18, Y+1	; 0x01
     e78:	28 71       	andi	r18, 0x18	; 24
     e7a:	23 2b       	or	r18, r19
     e7c:	fc 01       	movw	r30, r24
     e7e:	20 83       	st	Z, r18
     e80:	8c e4       	ldi	r24, 0x4C	; 76
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	2c 81       	ldd	r18, Y+4	; 0x04
     e86:	3d 81       	ldd	r19, Y+5	; 0x05
     e88:	fc 01       	movw	r30, r24
     e8a:	31 83       	std	Z+1, r19	; 0x01
     e8c:	20 83       	st	Z, r18
     e8e:	8a e4       	ldi	r24, 0x4A	; 74
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	2e 81       	ldd	r18, Y+6	; 0x06
     e94:	fc 01       	movw	r30, r24
     e96:	20 83       	st	Z, r18
     e98:	8b e4       	ldi	r24, 0x4B	; 75
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	2f 81       	ldd	r18, Y+7	; 0x07
     e9e:	fc 01       	movw	r30, r24
     ea0:	20 83       	st	Z, r18
     ea2:	89 e5       	ldi	r24, 0x59	; 89
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	29 e5       	ldi	r18, 0x59	; 89
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	f9 01       	movw	r30, r18
     eac:	30 81       	ld	r19, Z
     eae:	2a 85       	ldd	r18, Y+10	; 0x0a
     eb0:	23 2b       	or	r18, r19
     eb2:	fc 01       	movw	r30, r24
     eb4:	20 83       	st	Z, r18
     eb6:	8b 81       	ldd	r24, Y+3	; 0x03
     eb8:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <prescaller1>
     ebc:	8b 81       	ldd	r24, Y+3	; 0x03
     ebe:	88 2f       	mov	r24, r24
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	82 30       	cpi	r24, 0x02	; 2
     ec4:	91 05       	cpc	r25, r1
     ec6:	e9 f0       	breq	.+58     	; 0xf02 <Av_timer1Init+0xf8>
     ec8:	83 30       	cpi	r24, 0x03	; 3
     eca:	91 05       	cpc	r25, r1
     ecc:	2c f4       	brge	.+10     	; 0xed8 <Av_timer1Init+0xce>
     ece:	00 97       	sbiw	r24, 0x00	; 0
     ed0:	61 f0       	breq	.+24     	; 0xeea <Av_timer1Init+0xe0>
     ed2:	01 97       	sbiw	r24, 0x01	; 1
     ed4:	79 f0       	breq	.+30     	; 0xef4 <Av_timer1Init+0xea>
     ed6:	31 c0       	rjmp	.+98     	; 0xf3a <Av_timer1Init+0x130>
     ed8:	84 30       	cpi	r24, 0x04	; 4
     eda:	91 05       	cpc	r25, r1
     edc:	01 f1       	breq	.+64     	; 0xf1e <Av_timer1Init+0x114>
     ede:	84 30       	cpi	r24, 0x04	; 4
     ee0:	91 05       	cpc	r25, r1
     ee2:	b4 f0       	brlt	.+44     	; 0xf10 <Av_timer1Init+0x106>
     ee4:	05 97       	sbiw	r24, 0x05	; 5
     ee6:	11 f1       	breq	.+68     	; 0xf2c <Av_timer1Init+0x122>
     ee8:	28 c0       	rjmp	.+80     	; 0xf3a <Av_timer1Init+0x130>
     eea:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <preScaller_TIMER1+0x1>
     eee:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <preScaller_TIMER1>
     ef2:	23 c0       	rjmp	.+70     	; 0xf3a <Av_timer1Init+0x130>
     ef4:	81 e0       	ldi	r24, 0x01	; 1
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <preScaller_TIMER1+0x1>
     efc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <preScaller_TIMER1>
     f00:	1c c0       	rjmp	.+56     	; 0xf3a <Av_timer1Init+0x130>
     f02:	88 e0       	ldi	r24, 0x08	; 8
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <preScaller_TIMER1+0x1>
     f0a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <preScaller_TIMER1>
     f0e:	15 c0       	rjmp	.+42     	; 0xf3a <Av_timer1Init+0x130>
     f10:	80 e4       	ldi	r24, 0x40	; 64
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <preScaller_TIMER1+0x1>
     f18:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <preScaller_TIMER1>
     f1c:	0e c0       	rjmp	.+28     	; 0xf3a <Av_timer1Init+0x130>
     f1e:	80 e0       	ldi	r24, 0x00	; 0
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <preScaller_TIMER1+0x1>
     f26:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <preScaller_TIMER1>
     f2a:	07 c0       	rjmp	.+14     	; 0xf3a <Av_timer1Init+0x130>
     f2c:	80 e0       	ldi	r24, 0x00	; 0
     f2e:	94 e0       	ldi	r25, 0x04	; 4
     f30:	90 93 70 00 	sts	0x0070, r25	; 0x800070 <preScaller_TIMER1+0x1>
     f34:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <preScaller_TIMER1>
     f38:	00 00       	nop
     f3a:	00 00       	nop
     f3c:	2a 96       	adiw	r28, 0x0a	; 10
     f3e:	0f b6       	in	r0, 0x3f	; 63
     f40:	f8 94       	cli
     f42:	de bf       	out	0x3e, r29	; 62
     f44:	0f be       	out	0x3f, r0	; 63
     f46:	cd bf       	out	0x3d, r28	; 61
     f48:	df 91       	pop	r29
     f4a:	cf 91       	pop	r28
     f4c:	0f 91       	pop	r16
     f4e:	ef 90       	pop	r14
     f50:	df 90       	pop	r13
     f52:	cf 90       	pop	r12
     f54:	af 90       	pop	r10
     f56:	08 95       	ret

00000f58 <Av_timer1Start>:
     f58:	cf 93       	push	r28
     f5a:	df 93       	push	r29
     f5c:	cd b7       	in	r28, 0x3d	; 61
     f5e:	de b7       	in	r29, 0x3e	; 62
     f60:	8e e4       	ldi	r24, 0x4E	; 78
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	2e e4       	ldi	r18, 0x4E	; 78
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	f9 01       	movw	r30, r18
     f6a:	20 81       	ld	r18, Z
     f6c:	28 7f       	andi	r18, 0xF8	; 248
     f6e:	30 91 6b 00 	lds	r19, 0x006B	; 0x80006b <prescaller1>
     f72:	23 2b       	or	r18, r19
     f74:	fc 01       	movw	r30, r24
     f76:	20 83       	st	Z, r18
     f78:	00 00       	nop
     f7a:	df 91       	pop	r29
     f7c:	cf 91       	pop	r28
     f7e:	08 95       	ret

00000f80 <Av_timer1Stop>:
     f80:	cf 93       	push	r28
     f82:	df 93       	push	r29
     f84:	cd b7       	in	r28, 0x3d	; 61
     f86:	de b7       	in	r29, 0x3e	; 62
     f88:	8e e4       	ldi	r24, 0x4E	; 78
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	2e e4       	ldi	r18, 0x4E	; 78
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	f9 01       	movw	r30, r18
     f92:	20 81       	ld	r18, Z
     f94:	28 7f       	andi	r18, 0xF8	; 248
     f96:	fc 01       	movw	r30, r24
     f98:	20 83       	st	Z, r18
     f9a:	00 00       	nop
     f9c:	df 91       	pop	r29
     f9e:	cf 91       	pop	r28
     fa0:	08 95       	ret

00000fa2 <Av_timer2Init>:
     fa2:	ef 92       	push	r14
     fa4:	0f 93       	push	r16
     fa6:	cf 93       	push	r28
     fa8:	df 93       	push	r29
     faa:	00 d0       	rcall	.+0      	; 0xfac <Av_timer2Init+0xa>
     fac:	00 d0       	rcall	.+0      	; 0xfae <Av_timer2Init+0xc>
     fae:	00 d0       	rcall	.+0      	; 0xfb0 <Av_timer2Init+0xe>
     fb0:	cd b7       	in	r28, 0x3d	; 61
     fb2:	de b7       	in	r29, 0x3e	; 62
     fb4:	89 83       	std	Y+1, r24	; 0x01
     fb6:	6a 83       	std	Y+2, r22	; 0x02
     fb8:	4b 83       	std	Y+3, r20	; 0x03
     fba:	2c 83       	std	Y+4, r18	; 0x04
     fbc:	0d 83       	std	Y+5, r16	; 0x05
     fbe:	ee 82       	std	Y+6, r14	; 0x06
     fc0:	85 e4       	ldi	r24, 0x45	; 69
     fc2:	90 e0       	ldi	r25, 0x00	; 0
     fc4:	25 e4       	ldi	r18, 0x45	; 69
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	f9 01       	movw	r30, r18
     fca:	30 81       	ld	r19, Z
     fcc:	49 81       	ldd	r20, Y+1	; 0x01
     fce:	2a 81       	ldd	r18, Y+2	; 0x02
     fd0:	24 2b       	or	r18, r20
     fd2:	23 2b       	or	r18, r19
     fd4:	fc 01       	movw	r30, r24
     fd6:	20 83       	st	Z, r18
     fd8:	84 e4       	ldi	r24, 0x44	; 68
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	2c 81       	ldd	r18, Y+4	; 0x04
     fde:	fc 01       	movw	r30, r24
     fe0:	20 83       	st	Z, r18
     fe2:	83 e4       	ldi	r24, 0x43	; 67
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	2d 81       	ldd	r18, Y+5	; 0x05
     fe8:	fc 01       	movw	r30, r24
     fea:	20 83       	st	Z, r18
     fec:	89 e5       	ldi	r24, 0x59	; 89
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	29 e5       	ldi	r18, 0x59	; 89
     ff2:	30 e0       	ldi	r19, 0x00	; 0
     ff4:	f9 01       	movw	r30, r18
     ff6:	30 81       	ld	r19, Z
     ff8:	2e 81       	ldd	r18, Y+6	; 0x06
     ffa:	23 2b       	or	r18, r19
     ffc:	fc 01       	movw	r30, r24
     ffe:	20 83       	st	Z, r18
    1000:	8b 81       	ldd	r24, Y+3	; 0x03
    1002:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <prescaller2>
    1006:	8b 81       	ldd	r24, Y+3	; 0x03
    1008:	88 2f       	mov	r24, r24
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	09 2e       	mov	r0, r25
    100e:	00 0c       	add	r0, r0
    1010:	aa 0b       	sbc	r26, r26
    1012:	bb 0b       	sbc	r27, r27
    1014:	40 e0       	ldi	r20, 0x00	; 0
    1016:	50 e0       	ldi	r21, 0x00	; 0
    1018:	27 e0       	ldi	r18, 0x07	; 7
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	84 1b       	sub	r24, r20
    101e:	95 0b       	sbc	r25, r21
    1020:	28 17       	cp	r18, r24
    1022:	39 07       	cpc	r19, r25
    1024:	d8 f1       	brcs	.+118    	; 0x109c <Av_timer2Init+0xfa>
    1026:	86 5d       	subi	r24, 0xD6	; 214
    1028:	9f 4f       	sbci	r25, 0xFF	; 255
    102a:	fc 01       	movw	r30, r24
    102c:	0c 94 39 0b 	jmp	0x1672	; 0x1672 <__tablejump2__>
    1030:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <preScaller_TIMER2+0x1>
    1034:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <preScaller_TIMER2>
    1038:	31 c0       	rjmp	.+98     	; 0x109c <Av_timer2Init+0xfa>
    103a:	81 e0       	ldi	r24, 0x01	; 1
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <preScaller_TIMER2+0x1>
    1042:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <preScaller_TIMER2>
    1046:	2a c0       	rjmp	.+84     	; 0x109c <Av_timer2Init+0xfa>
    1048:	88 e0       	ldi	r24, 0x08	; 8
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <preScaller_TIMER2+0x1>
    1050:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <preScaller_TIMER2>
    1054:	23 c0       	rjmp	.+70     	; 0x109c <Av_timer2Init+0xfa>
    1056:	80 e2       	ldi	r24, 0x20	; 32
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <preScaller_TIMER2+0x1>
    105e:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <preScaller_TIMER2>
    1062:	1c c0       	rjmp	.+56     	; 0x109c <Av_timer2Init+0xfa>
    1064:	80 e4       	ldi	r24, 0x40	; 64
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <preScaller_TIMER2+0x1>
    106c:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <preScaller_TIMER2>
    1070:	15 c0       	rjmp	.+42     	; 0x109c <Av_timer2Init+0xfa>
    1072:	80 e8       	ldi	r24, 0x80	; 128
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <preScaller_TIMER2+0x1>
    107a:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <preScaller_TIMER2>
    107e:	0e c0       	rjmp	.+28     	; 0x109c <Av_timer2Init+0xfa>
    1080:	80 e0       	ldi	r24, 0x00	; 0
    1082:	91 e0       	ldi	r25, 0x01	; 1
    1084:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <preScaller_TIMER2+0x1>
    1088:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <preScaller_TIMER2>
    108c:	07 c0       	rjmp	.+14     	; 0x109c <Av_timer2Init+0xfa>
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	94 e0       	ldi	r25, 0x04	; 4
    1092:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <preScaller_TIMER2+0x1>
    1096:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <preScaller_TIMER2>
    109a:	00 00       	nop
    109c:	00 00       	nop
    109e:	26 96       	adiw	r28, 0x06	; 6
    10a0:	0f b6       	in	r0, 0x3f	; 63
    10a2:	f8 94       	cli
    10a4:	de bf       	out	0x3e, r29	; 62
    10a6:	0f be       	out	0x3f, r0	; 63
    10a8:	cd bf       	out	0x3d, r28	; 61
    10aa:	df 91       	pop	r29
    10ac:	cf 91       	pop	r28
    10ae:	0f 91       	pop	r16
    10b0:	ef 90       	pop	r14
    10b2:	08 95       	ret

000010b4 <Av_timer2Start>:
    10b4:	cf 93       	push	r28
    10b6:	df 93       	push	r29
    10b8:	cd b7       	in	r28, 0x3d	; 61
    10ba:	de b7       	in	r29, 0x3e	; 62
    10bc:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <prescaller2>
    10c0:	85 e4       	ldi	r24, 0x45	; 69
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	25 e4       	ldi	r18, 0x45	; 69
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	f9 01       	movw	r30, r18
    10ca:	20 81       	ld	r18, Z
    10cc:	24 2b       	or	r18, r20
    10ce:	fc 01       	movw	r30, r24
    10d0:	20 83       	st	Z, r18
    10d2:	00 00       	nop
    10d4:	df 91       	pop	r29
    10d6:	cf 91       	pop	r28
    10d8:	08 95       	ret

000010da <AVE_timer1PWM>:
}



void AVE_timer1PWM(uint8 dutycycle , uint16 freq ){
    10da:	cf 93       	push	r28
    10dc:	df 93       	push	r29
    10de:	cd b7       	in	r28, 0x3d	; 61
    10e0:	de b7       	in	r29, 0x3e	; 62
    10e2:	2b 97       	sbiw	r28, 0x0b	; 11
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	f8 94       	cli
    10e8:	de bf       	out	0x3e, r29	; 62
    10ea:	0f be       	out	0x3f, r0	; 63
    10ec:	cd bf       	out	0x3d, r28	; 61
    10ee:	89 87       	std	Y+9, r24	; 0x09
    10f0:	7b 87       	std	Y+11, r23	; 0x0b
    10f2:	6a 87       	std	Y+10, r22	; 0x0a
	// in ms
	uint32 TOP_Value;
	uint32 Compare_Value;
	TOP_Value=(F_CPU/(2*freq*1024));
    10f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    10f6:	9b 85       	ldd	r25, Y+11	; 0x0b
    10f8:	98 2f       	mov	r25, r24
    10fa:	88 27       	eor	r24, r24
    10fc:	99 0f       	add	r25, r25
    10fe:	99 0f       	add	r25, r25
    1100:	99 0f       	add	r25, r25
    1102:	9c 01       	movw	r18, r24
    1104:	40 e0       	ldi	r20, 0x00	; 0
    1106:	50 e0       	ldi	r21, 0x00	; 0
    1108:	80 e0       	ldi	r24, 0x00	; 0
    110a:	92 e1       	ldi	r25, 0x12	; 18
    110c:	aa e7       	ldi	r26, 0x7A	; 122
    110e:	b0 e0       	ldi	r27, 0x00	; 0
    1110:	bc 01       	movw	r22, r24
    1112:	cd 01       	movw	r24, r26
    1114:	0e 94 17 0b 	call	0x162e	; 0x162e <__udivmodsi4>
    1118:	da 01       	movw	r26, r20
    111a:	c9 01       	movw	r24, r18
    111c:	89 83       	std	Y+1, r24	; 0x01
    111e:	9a 83       	std	Y+2, r25	; 0x02
    1120:	ab 83       	std	Y+3, r26	; 0x03
    1122:	bc 83       	std	Y+4, r27	; 0x04
	Compare_Value=(TOP_Value*dutycycle)/100;
    1124:	89 85       	ldd	r24, Y+9	; 0x09
    1126:	28 2f       	mov	r18, r24
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	40 e0       	ldi	r20, 0x00	; 0
    112c:	50 e0       	ldi	r21, 0x00	; 0
    112e:	89 81       	ldd	r24, Y+1	; 0x01
    1130:	9a 81       	ldd	r25, Y+2	; 0x02
    1132:	ab 81       	ldd	r26, Y+3	; 0x03
    1134:	bc 81       	ldd	r27, Y+4	; 0x04
    1136:	bc 01       	movw	r22, r24
    1138:	cd 01       	movw	r24, r26
    113a:	0e 94 07 0b 	call	0x160e	; 0x160e <__mulsi3>
    113e:	dc 01       	movw	r26, r24
    1140:	cb 01       	movw	r24, r22
    1142:	24 e6       	ldi	r18, 0x64	; 100
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	40 e0       	ldi	r20, 0x00	; 0
    1148:	50 e0       	ldi	r21, 0x00	; 0
    114a:	bc 01       	movw	r22, r24
    114c:	cd 01       	movw	r24, r26
    114e:	0e 94 17 0b 	call	0x162e	; 0x162e <__udivmodsi4>
    1152:	da 01       	movw	r26, r20
    1154:	c9 01       	movw	r24, r18
    1156:	8d 83       	std	Y+5, r24	; 0x05
    1158:	9e 83       	std	Y+6, r25	; 0x06
    115a:	af 83       	std	Y+7, r26	; 0x07
    115c:	b8 87       	std	Y+8, r27	; 0x08
	ICR1H=(uint8)(TOP_Value>>8);
    115e:	27 e4       	ldi	r18, 0x47	; 71
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	89 81       	ldd	r24, Y+1	; 0x01
    1164:	9a 81       	ldd	r25, Y+2	; 0x02
    1166:	ab 81       	ldd	r26, Y+3	; 0x03
    1168:	bc 81       	ldd	r27, Y+4	; 0x04
    116a:	89 2f       	mov	r24, r25
    116c:	9a 2f       	mov	r25, r26
    116e:	ab 2f       	mov	r26, r27
    1170:	bb 27       	eor	r27, r27
    1172:	f9 01       	movw	r30, r18
    1174:	80 83       	st	Z, r24
	ICR1L=(uint8)(TOP_Value);
    1176:	86 e4       	ldi	r24, 0x46	; 70
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	29 81       	ldd	r18, Y+1	; 0x01
    117c:	fc 01       	movw	r30, r24
    117e:	20 83       	st	Z, r18
	OCR1AH=(uint8)(Compare_Value>>8);
    1180:	2b e4       	ldi	r18, 0x4B	; 75
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	8d 81       	ldd	r24, Y+5	; 0x05
    1186:	9e 81       	ldd	r25, Y+6	; 0x06
    1188:	af 81       	ldd	r26, Y+7	; 0x07
    118a:	b8 85       	ldd	r27, Y+8	; 0x08
    118c:	89 2f       	mov	r24, r25
    118e:	9a 2f       	mov	r25, r26
    1190:	ab 2f       	mov	r26, r27
    1192:	bb 27       	eor	r27, r27
    1194:	f9 01       	movw	r30, r18
    1196:	80 83       	st	Z, r24
	OCR1AL=(uint8)(Compare_Value);
    1198:	8a e4       	ldi	r24, 0x4A	; 74
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	2d 81       	ldd	r18, Y+5	; 0x05
    119e:	fc 01       	movw	r30, r24
    11a0:	20 83       	st	Z, r18
    11a2:	00 00       	nop
    11a4:	2b 96       	adiw	r28, 0x0b	; 11
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	f8 94       	cli
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	cd bf       	out	0x3d, r28	; 61
    11b0:	df 91       	pop	r29
    11b2:	cf 91       	pop	r28
    11b4:	08 95       	ret

000011b6 <__divsf3>:
    11b6:	0e 94 ef 08 	call	0x11de	; 0x11de <__divsf3x>
    11ba:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__fp_round>
    11be:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__fp_pscB>
    11c2:	58 f0       	brcs	.+22     	; 0x11da <__divsf3+0x24>
    11c4:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <__fp_pscA>
    11c8:	40 f0       	brcs	.+16     	; 0x11da <__divsf3+0x24>
    11ca:	29 f4       	brne	.+10     	; 0x11d6 <__divsf3+0x20>
    11cc:	5f 3f       	cpi	r21, 0xFF	; 255
    11ce:	29 f0       	breq	.+10     	; 0x11da <__divsf3+0x24>
    11d0:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    11d4:	51 11       	cpse	r21, r1
    11d6:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_szero>
    11da:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__fp_nan>

000011de <__divsf3x>:
    11de:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <__fp_split3>
    11e2:	68 f3       	brcs	.-38     	; 0x11be <__divsf3+0x8>

000011e4 <__divsf3_pse>:
    11e4:	99 23       	and	r25, r25
    11e6:	b1 f3       	breq	.-20     	; 0x11d4 <__divsf3+0x1e>
    11e8:	55 23       	and	r21, r21
    11ea:	91 f3       	breq	.-28     	; 0x11d0 <__divsf3+0x1a>
    11ec:	95 1b       	sub	r25, r21
    11ee:	55 0b       	sbc	r21, r21
    11f0:	bb 27       	eor	r27, r27
    11f2:	aa 27       	eor	r26, r26
    11f4:	62 17       	cp	r22, r18
    11f6:	73 07       	cpc	r23, r19
    11f8:	84 07       	cpc	r24, r20
    11fa:	38 f0       	brcs	.+14     	; 0x120a <__divsf3_pse+0x26>
    11fc:	9f 5f       	subi	r25, 0xFF	; 255
    11fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1200:	22 0f       	add	r18, r18
    1202:	33 1f       	adc	r19, r19
    1204:	44 1f       	adc	r20, r20
    1206:	aa 1f       	adc	r26, r26
    1208:	a9 f3       	breq	.-22     	; 0x11f4 <__divsf3_pse+0x10>
    120a:	35 d0       	rcall	.+106    	; 0x1276 <__divsf3_pse+0x92>
    120c:	0e 2e       	mov	r0, r30
    120e:	3a f0       	brmi	.+14     	; 0x121e <__divsf3_pse+0x3a>
    1210:	e0 e8       	ldi	r30, 0x80	; 128
    1212:	32 d0       	rcall	.+100    	; 0x1278 <__divsf3_pse+0x94>
    1214:	91 50       	subi	r25, 0x01	; 1
    1216:	50 40       	sbci	r21, 0x00	; 0
    1218:	e6 95       	lsr	r30
    121a:	00 1c       	adc	r0, r0
    121c:	ca f7       	brpl	.-14     	; 0x1210 <__divsf3_pse+0x2c>
    121e:	2b d0       	rcall	.+86     	; 0x1276 <__divsf3_pse+0x92>
    1220:	fe 2f       	mov	r31, r30
    1222:	29 d0       	rcall	.+82     	; 0x1276 <__divsf3_pse+0x92>
    1224:	66 0f       	add	r22, r22
    1226:	77 1f       	adc	r23, r23
    1228:	88 1f       	adc	r24, r24
    122a:	bb 1f       	adc	r27, r27
    122c:	26 17       	cp	r18, r22
    122e:	37 07       	cpc	r19, r23
    1230:	48 07       	cpc	r20, r24
    1232:	ab 07       	cpc	r26, r27
    1234:	b0 e8       	ldi	r27, 0x80	; 128
    1236:	09 f0       	breq	.+2      	; 0x123a <__divsf3_pse+0x56>
    1238:	bb 0b       	sbc	r27, r27
    123a:	80 2d       	mov	r24, r0
    123c:	bf 01       	movw	r22, r30
    123e:	ff 27       	eor	r31, r31
    1240:	93 58       	subi	r25, 0x83	; 131
    1242:	5f 4f       	sbci	r21, 0xFF	; 255
    1244:	3a f0       	brmi	.+14     	; 0x1254 <__divsf3_pse+0x70>
    1246:	9e 3f       	cpi	r25, 0xFE	; 254
    1248:	51 05       	cpc	r21, r1
    124a:	78 f0       	brcs	.+30     	; 0x126a <__divsf3_pse+0x86>
    124c:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    1250:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_szero>
    1254:	5f 3f       	cpi	r21, 0xFF	; 255
    1256:	e4 f3       	brlt	.-8      	; 0x1250 <__divsf3_pse+0x6c>
    1258:	98 3e       	cpi	r25, 0xE8	; 232
    125a:	d4 f3       	brlt	.-12     	; 0x1250 <__divsf3_pse+0x6c>
    125c:	86 95       	lsr	r24
    125e:	77 95       	ror	r23
    1260:	67 95       	ror	r22
    1262:	b7 95       	ror	r27
    1264:	f7 95       	ror	r31
    1266:	9f 5f       	subi	r25, 0xFF	; 255
    1268:	c9 f7       	brne	.-14     	; 0x125c <__divsf3_pse+0x78>
    126a:	88 0f       	add	r24, r24
    126c:	91 1d       	adc	r25, r1
    126e:	96 95       	lsr	r25
    1270:	87 95       	ror	r24
    1272:	97 f9       	bld	r25, 7
    1274:	08 95       	ret
    1276:	e1 e0       	ldi	r30, 0x01	; 1
    1278:	66 0f       	add	r22, r22
    127a:	77 1f       	adc	r23, r23
    127c:	88 1f       	adc	r24, r24
    127e:	bb 1f       	adc	r27, r27
    1280:	62 17       	cp	r22, r18
    1282:	73 07       	cpc	r23, r19
    1284:	84 07       	cpc	r24, r20
    1286:	ba 07       	cpc	r27, r26
    1288:	20 f0       	brcs	.+8      	; 0x1292 <__divsf3_pse+0xae>
    128a:	62 1b       	sub	r22, r18
    128c:	73 0b       	sbc	r23, r19
    128e:	84 0b       	sbc	r24, r20
    1290:	ba 0b       	sbc	r27, r26
    1292:	ee 1f       	adc	r30, r30
    1294:	88 f7       	brcc	.-30     	; 0x1278 <__divsf3_pse+0x94>
    1296:	e0 95       	com	r30
    1298:	08 95       	ret

0000129a <__fixsfdi>:
    129a:	be e3       	ldi	r27, 0x3E	; 62
    129c:	04 d0       	rcall	.+8      	; 0x12a6 <__fixunssfdi+0x2>
    129e:	08 f4       	brcc	.+2      	; 0x12a2 <__fixsfdi+0x8>
    12a0:	90 e8       	ldi	r25, 0x80	; 128
    12a2:	08 95       	ret

000012a4 <__fixunssfdi>:
    12a4:	bf e3       	ldi	r27, 0x3F	; 63
    12a6:	22 27       	eor	r18, r18
    12a8:	33 27       	eor	r19, r19
    12aa:	a9 01       	movw	r20, r18
    12ac:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__fp_splitA>
    12b0:	60 f1       	brcs	.+88     	; 0x130a <__fixunssfdi+0x66>
    12b2:	9f 57       	subi	r25, 0x7F	; 127
    12b4:	48 f1       	brcs	.+82     	; 0x1308 <__fixunssfdi+0x64>
    12b6:	b9 17       	cp	r27, r25
    12b8:	40 f1       	brcs	.+80     	; 0x130a <__fixunssfdi+0x66>
    12ba:	bf e3       	ldi	r27, 0x3F	; 63
    12bc:	b9 1b       	sub	r27, r25
    12be:	99 27       	eor	r25, r25
    12c0:	b8 50       	subi	r27, 0x08	; 8
    12c2:	3a f4       	brpl	.+14     	; 0x12d2 <__fixunssfdi+0x2e>
    12c4:	66 0f       	add	r22, r22
    12c6:	77 1f       	adc	r23, r23
    12c8:	88 1f       	adc	r24, r24
    12ca:	99 1f       	adc	r25, r25
    12cc:	b3 95       	inc	r27
    12ce:	d2 f3       	brmi	.-12     	; 0x12c4 <__fixunssfdi+0x20>
    12d0:	16 c0       	rjmp	.+44     	; 0x12fe <__fixunssfdi+0x5a>
    12d2:	b8 50       	subi	r27, 0x08	; 8
    12d4:	4a f0       	brmi	.+18     	; 0x12e8 <__fixunssfdi+0x44>
    12d6:	23 2f       	mov	r18, r19
    12d8:	34 2f       	mov	r19, r20
    12da:	45 2f       	mov	r20, r21
    12dc:	56 2f       	mov	r21, r22
    12de:	67 2f       	mov	r22, r23
    12e0:	78 2f       	mov	r23, r24
    12e2:	88 27       	eor	r24, r24
    12e4:	b8 50       	subi	r27, 0x08	; 8
    12e6:	ba f7       	brpl	.-18     	; 0x12d6 <__fixunssfdi+0x32>
    12e8:	b8 5f       	subi	r27, 0xF8	; 248
    12ea:	49 f0       	breq	.+18     	; 0x12fe <__fixunssfdi+0x5a>
    12ec:	86 95       	lsr	r24
    12ee:	77 95       	ror	r23
    12f0:	67 95       	ror	r22
    12f2:	57 95       	ror	r21
    12f4:	47 95       	ror	r20
    12f6:	37 95       	ror	r19
    12f8:	27 95       	ror	r18
    12fa:	ba 95       	dec	r27
    12fc:	b9 f7       	brne	.-18     	; 0x12ec <__fixunssfdi+0x48>
    12fe:	16 f4       	brtc	.+4      	; 0x1304 <__fixunssfdi+0x60>
    1300:	0e 94 42 0a 	call	0x1484	; 0x1484 <__fp_negdi>
    1304:	88 94       	clc
    1306:	08 95       	ret
    1308:	88 94       	clc
    130a:	60 e0       	ldi	r22, 0x00	; 0
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	cb 01       	movw	r24, r22
    1310:	08 95       	ret

00001312 <__fixunssfsi>:
    1312:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__fp_splitA>
    1316:	88 f0       	brcs	.+34     	; 0x133a <__fixunssfsi+0x28>
    1318:	9f 57       	subi	r25, 0x7F	; 127
    131a:	98 f0       	brcs	.+38     	; 0x1342 <__fixunssfsi+0x30>
    131c:	b9 2f       	mov	r27, r25
    131e:	99 27       	eor	r25, r25
    1320:	b7 51       	subi	r27, 0x17	; 23
    1322:	b0 f0       	brcs	.+44     	; 0x1350 <__fixunssfsi+0x3e>
    1324:	e1 f0       	breq	.+56     	; 0x135e <__fixunssfsi+0x4c>
    1326:	66 0f       	add	r22, r22
    1328:	77 1f       	adc	r23, r23
    132a:	88 1f       	adc	r24, r24
    132c:	99 1f       	adc	r25, r25
    132e:	1a f0       	brmi	.+6      	; 0x1336 <__fixunssfsi+0x24>
    1330:	ba 95       	dec	r27
    1332:	c9 f7       	brne	.-14     	; 0x1326 <__fixunssfsi+0x14>
    1334:	14 c0       	rjmp	.+40     	; 0x135e <__fixunssfsi+0x4c>
    1336:	b1 30       	cpi	r27, 0x01	; 1
    1338:	91 f0       	breq	.+36     	; 0x135e <__fixunssfsi+0x4c>
    133a:	0e 94 93 0a 	call	0x1526	; 0x1526 <__fp_zero>
    133e:	b1 e0       	ldi	r27, 0x01	; 1
    1340:	08 95       	ret
    1342:	0c 94 93 0a 	jmp	0x1526	; 0x1526 <__fp_zero>
    1346:	67 2f       	mov	r22, r23
    1348:	78 2f       	mov	r23, r24
    134a:	88 27       	eor	r24, r24
    134c:	b8 5f       	subi	r27, 0xF8	; 248
    134e:	39 f0       	breq	.+14     	; 0x135e <__fixunssfsi+0x4c>
    1350:	b9 3f       	cpi	r27, 0xF9	; 249
    1352:	cc f3       	brlt	.-14     	; 0x1346 <__fixunssfsi+0x34>
    1354:	86 95       	lsr	r24
    1356:	77 95       	ror	r23
    1358:	67 95       	ror	r22
    135a:	b3 95       	inc	r27
    135c:	d9 f7       	brne	.-10     	; 0x1354 <__fixunssfsi+0x42>
    135e:	3e f4       	brtc	.+14     	; 0x136e <__fixunssfsi+0x5c>
    1360:	90 95       	com	r25
    1362:	80 95       	com	r24
    1364:	70 95       	com	r23
    1366:	61 95       	neg	r22
    1368:	7f 4f       	sbci	r23, 0xFF	; 255
    136a:	8f 4f       	sbci	r24, 0xFF	; 255
    136c:	9f 4f       	sbci	r25, 0xFF	; 255
    136e:	08 95       	ret

00001370 <__floatdisf>:
    1370:	97 fb       	bst	r25, 7
    1372:	16 f4       	brtc	.+4      	; 0x1378 <__floatdisf+0x8>
    1374:	0e 94 42 0a 	call	0x1484	; 0x1484 <__fp_negdi>
    1378:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <__fp_di2sf>

0000137c <__floatunsisf>:
    137c:	e8 94       	clt
    137e:	09 c0       	rjmp	.+18     	; 0x1392 <__floatsisf+0x12>

00001380 <__floatsisf>:
    1380:	97 fb       	bst	r25, 7
    1382:	3e f4       	brtc	.+14     	; 0x1392 <__floatsisf+0x12>
    1384:	90 95       	com	r25
    1386:	80 95       	com	r24
    1388:	70 95       	com	r23
    138a:	61 95       	neg	r22
    138c:	7f 4f       	sbci	r23, 0xFF	; 255
    138e:	8f 4f       	sbci	r24, 0xFF	; 255
    1390:	9f 4f       	sbci	r25, 0xFF	; 255
    1392:	99 23       	and	r25, r25
    1394:	a9 f0       	breq	.+42     	; 0x13c0 <__floatsisf+0x40>
    1396:	f9 2f       	mov	r31, r25
    1398:	96 e9       	ldi	r25, 0x96	; 150
    139a:	bb 27       	eor	r27, r27
    139c:	93 95       	inc	r25
    139e:	f6 95       	lsr	r31
    13a0:	87 95       	ror	r24
    13a2:	77 95       	ror	r23
    13a4:	67 95       	ror	r22
    13a6:	b7 95       	ror	r27
    13a8:	f1 11       	cpse	r31, r1
    13aa:	f8 cf       	rjmp	.-16     	; 0x139c <__floatsisf+0x1c>
    13ac:	fa f4       	brpl	.+62     	; 0x13ec <__floatsisf+0x6c>
    13ae:	bb 0f       	add	r27, r27
    13b0:	11 f4       	brne	.+4      	; 0x13b6 <__floatsisf+0x36>
    13b2:	60 ff       	sbrs	r22, 0
    13b4:	1b c0       	rjmp	.+54     	; 0x13ec <__floatsisf+0x6c>
    13b6:	6f 5f       	subi	r22, 0xFF	; 255
    13b8:	7f 4f       	sbci	r23, 0xFF	; 255
    13ba:	8f 4f       	sbci	r24, 0xFF	; 255
    13bc:	9f 4f       	sbci	r25, 0xFF	; 255
    13be:	16 c0       	rjmp	.+44     	; 0x13ec <__floatsisf+0x6c>
    13c0:	88 23       	and	r24, r24
    13c2:	11 f0       	breq	.+4      	; 0x13c8 <__floatsisf+0x48>
    13c4:	96 e9       	ldi	r25, 0x96	; 150
    13c6:	11 c0       	rjmp	.+34     	; 0x13ea <__floatsisf+0x6a>
    13c8:	77 23       	and	r23, r23
    13ca:	21 f0       	breq	.+8      	; 0x13d4 <__floatsisf+0x54>
    13cc:	9e e8       	ldi	r25, 0x8E	; 142
    13ce:	87 2f       	mov	r24, r23
    13d0:	76 2f       	mov	r23, r22
    13d2:	05 c0       	rjmp	.+10     	; 0x13de <__floatsisf+0x5e>
    13d4:	66 23       	and	r22, r22
    13d6:	71 f0       	breq	.+28     	; 0x13f4 <__floatsisf+0x74>
    13d8:	96 e8       	ldi	r25, 0x86	; 134
    13da:	86 2f       	mov	r24, r22
    13dc:	70 e0       	ldi	r23, 0x00	; 0
    13de:	60 e0       	ldi	r22, 0x00	; 0
    13e0:	2a f0       	brmi	.+10     	; 0x13ec <__floatsisf+0x6c>
    13e2:	9a 95       	dec	r25
    13e4:	66 0f       	add	r22, r22
    13e6:	77 1f       	adc	r23, r23
    13e8:	88 1f       	adc	r24, r24
    13ea:	da f7       	brpl	.-10     	; 0x13e2 <__floatsisf+0x62>
    13ec:	88 0f       	add	r24, r24
    13ee:	96 95       	lsr	r25
    13f0:	87 95       	ror	r24
    13f2:	97 f9       	bld	r25, 7
    13f4:	08 95       	ret

000013f6 <__floatundisf>:
    13f6:	e8 94       	clt

000013f8 <__fp_di2sf>:
    13f8:	f9 2f       	mov	r31, r25
    13fa:	96 eb       	ldi	r25, 0xB6	; 182
    13fc:	ff 23       	and	r31, r31
    13fe:	81 f0       	breq	.+32     	; 0x1420 <__fp_di2sf+0x28>
    1400:	12 16       	cp	r1, r18
    1402:	13 06       	cpc	r1, r19
    1404:	14 06       	cpc	r1, r20
    1406:	44 0b       	sbc	r20, r20
    1408:	93 95       	inc	r25
    140a:	f6 95       	lsr	r31
    140c:	87 95       	ror	r24
    140e:	77 95       	ror	r23
    1410:	67 95       	ror	r22
    1412:	57 95       	ror	r21
    1414:	40 40       	sbci	r20, 0x00	; 0
    1416:	ff 23       	and	r31, r31
    1418:	b9 f7       	brne	.-18     	; 0x1408 <__fp_di2sf+0x10>
    141a:	1b c0       	rjmp	.+54     	; 0x1452 <__fp_di2sf+0x5a>
    141c:	99 27       	eor	r25, r25
    141e:	08 95       	ret
    1420:	88 23       	and	r24, r24
    1422:	51 f4       	brne	.+20     	; 0x1438 <__fp_di2sf+0x40>
    1424:	98 50       	subi	r25, 0x08	; 8
    1426:	d2 f7       	brpl	.-12     	; 0x141c <__fp_di2sf+0x24>
    1428:	87 2b       	or	r24, r23
    142a:	76 2f       	mov	r23, r22
    142c:	65 2f       	mov	r22, r21
    142e:	54 2f       	mov	r21, r20
    1430:	43 2f       	mov	r20, r19
    1432:	32 2f       	mov	r19, r18
    1434:	20 e0       	ldi	r18, 0x00	; 0
    1436:	b1 f3       	breq	.-20     	; 0x1424 <__fp_di2sf+0x2c>
    1438:	12 16       	cp	r1, r18
    143a:	13 06       	cpc	r1, r19
    143c:	14 06       	cpc	r1, r20
    143e:	44 0b       	sbc	r20, r20
    1440:	88 23       	and	r24, r24
    1442:	3a f0       	brmi	.+14     	; 0x1452 <__fp_di2sf+0x5a>
    1444:	9a 95       	dec	r25
    1446:	44 0f       	add	r20, r20
    1448:	55 1f       	adc	r21, r21
    144a:	66 1f       	adc	r22, r22
    144c:	77 1f       	adc	r23, r23
    144e:	88 1f       	adc	r24, r24
    1450:	ca f7       	brpl	.-14     	; 0x1444 <__fp_di2sf+0x4c>
    1452:	55 23       	and	r21, r21
    1454:	4a f4       	brpl	.+18     	; 0x1468 <__fp_di2sf+0x70>
    1456:	44 0f       	add	r20, r20
    1458:	55 1f       	adc	r21, r21
    145a:	11 f4       	brne	.+4      	; 0x1460 <__fp_di2sf+0x68>
    145c:	60 ff       	sbrs	r22, 0
    145e:	04 c0       	rjmp	.+8      	; 0x1468 <__fp_di2sf+0x70>
    1460:	6f 5f       	subi	r22, 0xFF	; 255
    1462:	7f 4f       	sbci	r23, 0xFF	; 255
    1464:	8f 4f       	sbci	r24, 0xFF	; 255
    1466:	9f 4f       	sbci	r25, 0xFF	; 255
    1468:	88 0f       	add	r24, r24
    146a:	96 95       	lsr	r25
    146c:	87 95       	ror	r24
    146e:	97 f9       	bld	r25, 7
    1470:	08 95       	ret

00001472 <__fp_inf>:
    1472:	97 f9       	bld	r25, 7
    1474:	9f 67       	ori	r25, 0x7F	; 127
    1476:	80 e8       	ldi	r24, 0x80	; 128
    1478:	70 e0       	ldi	r23, 0x00	; 0
    147a:	60 e0       	ldi	r22, 0x00	; 0
    147c:	08 95       	ret

0000147e <__fp_nan>:
    147e:	9f ef       	ldi	r25, 0xFF	; 255
    1480:	80 ec       	ldi	r24, 0xC0	; 192
    1482:	08 95       	ret

00001484 <__fp_negdi>:
    1484:	90 95       	com	r25
    1486:	80 95       	com	r24
    1488:	70 95       	com	r23
    148a:	60 95       	com	r22
    148c:	50 95       	com	r21
    148e:	40 95       	com	r20
    1490:	30 95       	com	r19
    1492:	21 95       	neg	r18
    1494:	3f 4f       	sbci	r19, 0xFF	; 255
    1496:	4f 4f       	sbci	r20, 0xFF	; 255
    1498:	5f 4f       	sbci	r21, 0xFF	; 255
    149a:	6f 4f       	sbci	r22, 0xFF	; 255
    149c:	7f 4f       	sbci	r23, 0xFF	; 255
    149e:	8f 4f       	sbci	r24, 0xFF	; 255
    14a0:	9f 4f       	sbci	r25, 0xFF	; 255
    14a2:	08 95       	ret

000014a4 <__fp_pscA>:
    14a4:	00 24       	eor	r0, r0
    14a6:	0a 94       	dec	r0
    14a8:	16 16       	cp	r1, r22
    14aa:	17 06       	cpc	r1, r23
    14ac:	18 06       	cpc	r1, r24
    14ae:	09 06       	cpc	r0, r25
    14b0:	08 95       	ret

000014b2 <__fp_pscB>:
    14b2:	00 24       	eor	r0, r0
    14b4:	0a 94       	dec	r0
    14b6:	12 16       	cp	r1, r18
    14b8:	13 06       	cpc	r1, r19
    14ba:	14 06       	cpc	r1, r20
    14bc:	05 06       	cpc	r0, r21
    14be:	08 95       	ret

000014c0 <__fp_round>:
    14c0:	09 2e       	mov	r0, r25
    14c2:	03 94       	inc	r0
    14c4:	00 0c       	add	r0, r0
    14c6:	11 f4       	brne	.+4      	; 0x14cc <__fp_round+0xc>
    14c8:	88 23       	and	r24, r24
    14ca:	52 f0       	brmi	.+20     	; 0x14e0 <__fp_round+0x20>
    14cc:	bb 0f       	add	r27, r27
    14ce:	40 f4       	brcc	.+16     	; 0x14e0 <__fp_round+0x20>
    14d0:	bf 2b       	or	r27, r31
    14d2:	11 f4       	brne	.+4      	; 0x14d8 <__fp_round+0x18>
    14d4:	60 ff       	sbrs	r22, 0
    14d6:	04 c0       	rjmp	.+8      	; 0x14e0 <__fp_round+0x20>
    14d8:	6f 5f       	subi	r22, 0xFF	; 255
    14da:	7f 4f       	sbci	r23, 0xFF	; 255
    14dc:	8f 4f       	sbci	r24, 0xFF	; 255
    14de:	9f 4f       	sbci	r25, 0xFF	; 255
    14e0:	08 95       	ret

000014e2 <__fp_split3>:
    14e2:	57 fd       	sbrc	r21, 7
    14e4:	90 58       	subi	r25, 0x80	; 128
    14e6:	44 0f       	add	r20, r20
    14e8:	55 1f       	adc	r21, r21
    14ea:	59 f0       	breq	.+22     	; 0x1502 <__fp_splitA+0x10>
    14ec:	5f 3f       	cpi	r21, 0xFF	; 255
    14ee:	71 f0       	breq	.+28     	; 0x150c <__fp_splitA+0x1a>
    14f0:	47 95       	ror	r20

000014f2 <__fp_splitA>:
    14f2:	88 0f       	add	r24, r24
    14f4:	97 fb       	bst	r25, 7
    14f6:	99 1f       	adc	r25, r25
    14f8:	61 f0       	breq	.+24     	; 0x1512 <__fp_splitA+0x20>
    14fa:	9f 3f       	cpi	r25, 0xFF	; 255
    14fc:	79 f0       	breq	.+30     	; 0x151c <__fp_splitA+0x2a>
    14fe:	87 95       	ror	r24
    1500:	08 95       	ret
    1502:	12 16       	cp	r1, r18
    1504:	13 06       	cpc	r1, r19
    1506:	14 06       	cpc	r1, r20
    1508:	55 1f       	adc	r21, r21
    150a:	f2 cf       	rjmp	.-28     	; 0x14f0 <__fp_split3+0xe>
    150c:	46 95       	lsr	r20
    150e:	f1 df       	rcall	.-30     	; 0x14f2 <__fp_splitA>
    1510:	08 c0       	rjmp	.+16     	; 0x1522 <__fp_splitA+0x30>
    1512:	16 16       	cp	r1, r22
    1514:	17 06       	cpc	r1, r23
    1516:	18 06       	cpc	r1, r24
    1518:	99 1f       	adc	r25, r25
    151a:	f1 cf       	rjmp	.-30     	; 0x14fe <__fp_splitA+0xc>
    151c:	86 95       	lsr	r24
    151e:	71 05       	cpc	r23, r1
    1520:	61 05       	cpc	r22, r1
    1522:	08 94       	sec
    1524:	08 95       	ret

00001526 <__fp_zero>:
    1526:	e8 94       	clt

00001528 <__fp_szero>:
    1528:	bb 27       	eor	r27, r27
    152a:	66 27       	eor	r22, r22
    152c:	77 27       	eor	r23, r23
    152e:	cb 01       	movw	r24, r22
    1530:	97 f9       	bld	r25, 7
    1532:	08 95       	ret

00001534 <__mulsf3>:
    1534:	0e 94 ad 0a 	call	0x155a	; 0x155a <__mulsf3x>
    1538:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__fp_round>
    153c:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <__fp_pscA>
    1540:	38 f0       	brcs	.+14     	; 0x1550 <__mulsf3+0x1c>
    1542:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__fp_pscB>
    1546:	20 f0       	brcs	.+8      	; 0x1550 <__mulsf3+0x1c>
    1548:	95 23       	and	r25, r21
    154a:	11 f0       	breq	.+4      	; 0x1550 <__mulsf3+0x1c>
    154c:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    1550:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__fp_nan>
    1554:	11 24       	eor	r1, r1
    1556:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_szero>

0000155a <__mulsf3x>:
    155a:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <__fp_split3>
    155e:	70 f3       	brcs	.-36     	; 0x153c <__mulsf3+0x8>

00001560 <__mulsf3_pse>:
    1560:	95 9f       	mul	r25, r21
    1562:	c1 f3       	breq	.-16     	; 0x1554 <__mulsf3+0x20>
    1564:	95 0f       	add	r25, r21
    1566:	50 e0       	ldi	r21, 0x00	; 0
    1568:	55 1f       	adc	r21, r21
    156a:	62 9f       	mul	r22, r18
    156c:	f0 01       	movw	r30, r0
    156e:	72 9f       	mul	r23, r18
    1570:	bb 27       	eor	r27, r27
    1572:	f0 0d       	add	r31, r0
    1574:	b1 1d       	adc	r27, r1
    1576:	63 9f       	mul	r22, r19
    1578:	aa 27       	eor	r26, r26
    157a:	f0 0d       	add	r31, r0
    157c:	b1 1d       	adc	r27, r1
    157e:	aa 1f       	adc	r26, r26
    1580:	64 9f       	mul	r22, r20
    1582:	66 27       	eor	r22, r22
    1584:	b0 0d       	add	r27, r0
    1586:	a1 1d       	adc	r26, r1
    1588:	66 1f       	adc	r22, r22
    158a:	82 9f       	mul	r24, r18
    158c:	22 27       	eor	r18, r18
    158e:	b0 0d       	add	r27, r0
    1590:	a1 1d       	adc	r26, r1
    1592:	62 1f       	adc	r22, r18
    1594:	73 9f       	mul	r23, r19
    1596:	b0 0d       	add	r27, r0
    1598:	a1 1d       	adc	r26, r1
    159a:	62 1f       	adc	r22, r18
    159c:	83 9f       	mul	r24, r19
    159e:	a0 0d       	add	r26, r0
    15a0:	61 1d       	adc	r22, r1
    15a2:	22 1f       	adc	r18, r18
    15a4:	74 9f       	mul	r23, r20
    15a6:	33 27       	eor	r19, r19
    15a8:	a0 0d       	add	r26, r0
    15aa:	61 1d       	adc	r22, r1
    15ac:	23 1f       	adc	r18, r19
    15ae:	84 9f       	mul	r24, r20
    15b0:	60 0d       	add	r22, r0
    15b2:	21 1d       	adc	r18, r1
    15b4:	82 2f       	mov	r24, r18
    15b6:	76 2f       	mov	r23, r22
    15b8:	6a 2f       	mov	r22, r26
    15ba:	11 24       	eor	r1, r1
    15bc:	9f 57       	subi	r25, 0x7F	; 127
    15be:	50 40       	sbci	r21, 0x00	; 0
    15c0:	9a f0       	brmi	.+38     	; 0x15e8 <__mulsf3_pse+0x88>
    15c2:	f1 f0       	breq	.+60     	; 0x1600 <__mulsf3_pse+0xa0>
    15c4:	88 23       	and	r24, r24
    15c6:	4a f0       	brmi	.+18     	; 0x15da <__mulsf3_pse+0x7a>
    15c8:	ee 0f       	add	r30, r30
    15ca:	ff 1f       	adc	r31, r31
    15cc:	bb 1f       	adc	r27, r27
    15ce:	66 1f       	adc	r22, r22
    15d0:	77 1f       	adc	r23, r23
    15d2:	88 1f       	adc	r24, r24
    15d4:	91 50       	subi	r25, 0x01	; 1
    15d6:	50 40       	sbci	r21, 0x00	; 0
    15d8:	a9 f7       	brne	.-22     	; 0x15c4 <__mulsf3_pse+0x64>
    15da:	9e 3f       	cpi	r25, 0xFE	; 254
    15dc:	51 05       	cpc	r21, r1
    15de:	80 f0       	brcs	.+32     	; 0x1600 <__mulsf3_pse+0xa0>
    15e0:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__fp_inf>
    15e4:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_szero>
    15e8:	5f 3f       	cpi	r21, 0xFF	; 255
    15ea:	e4 f3       	brlt	.-8      	; 0x15e4 <__mulsf3_pse+0x84>
    15ec:	98 3e       	cpi	r25, 0xE8	; 232
    15ee:	d4 f3       	brlt	.-12     	; 0x15e4 <__mulsf3_pse+0x84>
    15f0:	86 95       	lsr	r24
    15f2:	77 95       	ror	r23
    15f4:	67 95       	ror	r22
    15f6:	b7 95       	ror	r27
    15f8:	f7 95       	ror	r31
    15fa:	e7 95       	ror	r30
    15fc:	9f 5f       	subi	r25, 0xFF	; 255
    15fe:	c1 f7       	brne	.-16     	; 0x15f0 <__mulsf3_pse+0x90>
    1600:	fe 2b       	or	r31, r30
    1602:	88 0f       	add	r24, r24
    1604:	91 1d       	adc	r25, r1
    1606:	96 95       	lsr	r25
    1608:	87 95       	ror	r24
    160a:	97 f9       	bld	r25, 7
    160c:	08 95       	ret

0000160e <__mulsi3>:
    160e:	db 01       	movw	r26, r22
    1610:	8f 93       	push	r24
    1612:	9f 93       	push	r25
    1614:	0e 94 3f 0b 	call	0x167e	; 0x167e <__muluhisi3>
    1618:	bf 91       	pop	r27
    161a:	af 91       	pop	r26
    161c:	a2 9f       	mul	r26, r18
    161e:	80 0d       	add	r24, r0
    1620:	91 1d       	adc	r25, r1
    1622:	a3 9f       	mul	r26, r19
    1624:	90 0d       	add	r25, r0
    1626:	b2 9f       	mul	r27, r18
    1628:	90 0d       	add	r25, r0
    162a:	11 24       	eor	r1, r1
    162c:	08 95       	ret

0000162e <__udivmodsi4>:
    162e:	a1 e2       	ldi	r26, 0x21	; 33
    1630:	1a 2e       	mov	r1, r26
    1632:	aa 1b       	sub	r26, r26
    1634:	bb 1b       	sub	r27, r27
    1636:	fd 01       	movw	r30, r26
    1638:	0d c0       	rjmp	.+26     	; 0x1654 <__udivmodsi4_ep>

0000163a <__udivmodsi4_loop>:
    163a:	aa 1f       	adc	r26, r26
    163c:	bb 1f       	adc	r27, r27
    163e:	ee 1f       	adc	r30, r30
    1640:	ff 1f       	adc	r31, r31
    1642:	a2 17       	cp	r26, r18
    1644:	b3 07       	cpc	r27, r19
    1646:	e4 07       	cpc	r30, r20
    1648:	f5 07       	cpc	r31, r21
    164a:	20 f0       	brcs	.+8      	; 0x1654 <__udivmodsi4_ep>
    164c:	a2 1b       	sub	r26, r18
    164e:	b3 0b       	sbc	r27, r19
    1650:	e4 0b       	sbc	r30, r20
    1652:	f5 0b       	sbc	r31, r21

00001654 <__udivmodsi4_ep>:
    1654:	66 1f       	adc	r22, r22
    1656:	77 1f       	adc	r23, r23
    1658:	88 1f       	adc	r24, r24
    165a:	99 1f       	adc	r25, r25
    165c:	1a 94       	dec	r1
    165e:	69 f7       	brne	.-38     	; 0x163a <__udivmodsi4_loop>
    1660:	60 95       	com	r22
    1662:	70 95       	com	r23
    1664:	80 95       	com	r24
    1666:	90 95       	com	r25
    1668:	9b 01       	movw	r18, r22
    166a:	ac 01       	movw	r20, r24
    166c:	bd 01       	movw	r22, r26
    166e:	cf 01       	movw	r24, r30
    1670:	08 95       	ret

00001672 <__tablejump2__>:
    1672:	ee 0f       	add	r30, r30
    1674:	ff 1f       	adc	r31, r31
    1676:	05 90       	lpm	r0, Z+
    1678:	f4 91       	lpm	r31, Z
    167a:	e0 2d       	mov	r30, r0
    167c:	09 94       	ijmp

0000167e <__muluhisi3>:
    167e:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__umulhisi3>
    1682:	a5 9f       	mul	r26, r21
    1684:	90 0d       	add	r25, r0
    1686:	b4 9f       	mul	r27, r20
    1688:	90 0d       	add	r25, r0
    168a:	a4 9f       	mul	r26, r20
    168c:	80 0d       	add	r24, r0
    168e:	91 1d       	adc	r25, r1
    1690:	11 24       	eor	r1, r1
    1692:	08 95       	ret

00001694 <__muldi3>:
    1694:	df 93       	push	r29
    1696:	cf 93       	push	r28
    1698:	1f 93       	push	r17
    169a:	0f 93       	push	r16
    169c:	9a 9d       	mul	r25, r10
    169e:	f0 2d       	mov	r31, r0
    16a0:	21 9f       	mul	r18, r17
    16a2:	f0 0d       	add	r31, r0
    16a4:	8b 9d       	mul	r24, r11
    16a6:	f0 0d       	add	r31, r0
    16a8:	8a 9d       	mul	r24, r10
    16aa:	e0 2d       	mov	r30, r0
    16ac:	f1 0d       	add	r31, r1
    16ae:	03 9f       	mul	r16, r19
    16b0:	f0 0d       	add	r31, r0
    16b2:	02 9f       	mul	r16, r18
    16b4:	e0 0d       	add	r30, r0
    16b6:	f1 1d       	adc	r31, r1
    16b8:	4e 9d       	mul	r20, r14
    16ba:	e0 0d       	add	r30, r0
    16bc:	f1 1d       	adc	r31, r1
    16be:	5e 9d       	mul	r21, r14
    16c0:	f0 0d       	add	r31, r0
    16c2:	4f 9d       	mul	r20, r15
    16c4:	f0 0d       	add	r31, r0
    16c6:	7f 93       	push	r23
    16c8:	6f 93       	push	r22
    16ca:	bf 92       	push	r11
    16cc:	af 92       	push	r10
    16ce:	5f 93       	push	r21
    16d0:	4f 93       	push	r20
    16d2:	d5 01       	movw	r26, r10
    16d4:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__umulhisi3>
    16d8:	8b 01       	movw	r16, r22
    16da:	ac 01       	movw	r20, r24
    16dc:	d7 01       	movw	r26, r14
    16de:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__umulhisi3>
    16e2:	eb 01       	movw	r28, r22
    16e4:	e8 0f       	add	r30, r24
    16e6:	f9 1f       	adc	r31, r25
    16e8:	d6 01       	movw	r26, r12
    16ea:	0e 94 9a 0b 	call	0x1734	; 0x1734 <__muldi3_6>
    16ee:	2f 91       	pop	r18
    16f0:	3f 91       	pop	r19
    16f2:	d6 01       	movw	r26, r12
    16f4:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__umulhisi3>
    16f8:	c6 0f       	add	r28, r22
    16fa:	d7 1f       	adc	r29, r23
    16fc:	e8 1f       	adc	r30, r24
    16fe:	f9 1f       	adc	r31, r25
    1700:	af 91       	pop	r26
    1702:	bf 91       	pop	r27
    1704:	0e 94 9a 0b 	call	0x1734	; 0x1734 <__muldi3_6>
    1708:	2f 91       	pop	r18
    170a:	3f 91       	pop	r19
    170c:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__umulhisi3>
    1710:	c6 0f       	add	r28, r22
    1712:	d7 1f       	adc	r29, r23
    1714:	e8 1f       	adc	r30, r24
    1716:	f9 1f       	adc	r31, r25
    1718:	d6 01       	movw	r26, r12
    171a:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__umulhisi3>
    171e:	e6 0f       	add	r30, r22
    1720:	f7 1f       	adc	r31, r23
    1722:	98 01       	movw	r18, r16
    1724:	be 01       	movw	r22, r28
    1726:	cf 01       	movw	r24, r30
    1728:	11 24       	eor	r1, r1
    172a:	0f 91       	pop	r16
    172c:	1f 91       	pop	r17
    172e:	cf 91       	pop	r28
    1730:	df 91       	pop	r29
    1732:	08 95       	ret

00001734 <__muldi3_6>:
    1734:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__umulhisi3>
    1738:	46 0f       	add	r20, r22
    173a:	57 1f       	adc	r21, r23
    173c:	c8 1f       	adc	r28, r24
    173e:	d9 1f       	adc	r29, r25
    1740:	08 f4       	brcc	.+2      	; 0x1744 <__muldi3_6+0x10>
    1742:	31 96       	adiw	r30, 0x01	; 1
    1744:	08 95       	ret

00001746 <__adddi3_s8>:
    1746:	00 24       	eor	r0, r0
    1748:	a7 fd       	sbrc	r26, 7
    174a:	00 94       	com	r0
    174c:	2a 0f       	add	r18, r26
    174e:	30 1d       	adc	r19, r0
    1750:	40 1d       	adc	r20, r0
    1752:	50 1d       	adc	r21, r0
    1754:	60 1d       	adc	r22, r0
    1756:	70 1d       	adc	r23, r0
    1758:	80 1d       	adc	r24, r0
    175a:	90 1d       	adc	r25, r0
    175c:	08 95       	ret

0000175e <__cmpdi2_s8>:
    175e:	00 24       	eor	r0, r0
    1760:	a7 fd       	sbrc	r26, 7
    1762:	00 94       	com	r0
    1764:	2a 17       	cp	r18, r26
    1766:	30 05       	cpc	r19, r0
    1768:	40 05       	cpc	r20, r0
    176a:	50 05       	cpc	r21, r0
    176c:	60 05       	cpc	r22, r0
    176e:	70 05       	cpc	r23, r0
    1770:	80 05       	cpc	r24, r0
    1772:	90 05       	cpc	r25, r0
    1774:	08 95       	ret

00001776 <__umulhisi3>:
    1776:	a2 9f       	mul	r26, r18
    1778:	b0 01       	movw	r22, r0
    177a:	b3 9f       	mul	r27, r19
    177c:	c0 01       	movw	r24, r0
    177e:	a3 9f       	mul	r26, r19
    1780:	70 0d       	add	r23, r0
    1782:	81 1d       	adc	r24, r1
    1784:	11 24       	eor	r1, r1
    1786:	91 1d       	adc	r25, r1
    1788:	b2 9f       	mul	r27, r18
    178a:	70 0d       	add	r23, r0
    178c:	81 1d       	adc	r24, r1
    178e:	11 24       	eor	r1, r1
    1790:	91 1d       	adc	r25, r1
    1792:	08 95       	ret

00001794 <_exit>:
    1794:	f8 94       	cli

00001796 <__stop_program>:
    1796:	ff cf       	rjmp	.-2      	; 0x1796 <__stop_program>
